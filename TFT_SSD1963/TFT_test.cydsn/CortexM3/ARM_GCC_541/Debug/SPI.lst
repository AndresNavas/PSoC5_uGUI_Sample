ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPI.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPI_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	SPI_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	SPI_Enable, %function
  25              	SPI_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\SPI.c"
   1:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPI.c **** * File Name: SPI.c
   3:Generated_Source\PSoC5/SPI.c **** * Version 2.50
   4:Generated_Source\PSoC5/SPI.c **** *
   5:Generated_Source\PSoC5/SPI.c **** * Description:
   6:Generated_Source\PSoC5/SPI.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC5/SPI.c **** *
   8:Generated_Source\PSoC5/SPI.c **** * Note:
   9:Generated_Source\PSoC5/SPI.c **** *  None.
  10:Generated_Source\PSoC5/SPI.c **** *
  11:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
  12:Generated_Source\PSoC5/SPI.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/SPI.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/SPI.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/SPI.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/SPI.c **** 
  18:Generated_Source\PSoC5/SPI.c **** #include "SPI_PVT.h"
  19:Generated_Source\PSoC5/SPI.c **** 
  20:Generated_Source\PSoC5/SPI.c **** #if(SPI_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_txBuffer[SPI_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_txBufferFull;
  23:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_txBufferRead;
  24:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_txBufferWrite;
  25:Generated_Source\PSoC5/SPI.c **** #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC5/SPI.c **** 
  27:Generated_Source\PSoC5/SPI.c **** #if(SPI_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_rxBuffer[SPI_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_rxBufferFull;
  30:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_rxBufferRead;
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 2


  31:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_rxBufferWrite;
  32:Generated_Source\PSoC5/SPI.c **** #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC5/SPI.c **** 
  34:Generated_Source\PSoC5/SPI.c **** uint8 SPI_initVar = 0u;
  35:Generated_Source\PSoC5/SPI.c **** 
  36:Generated_Source\PSoC5/SPI.c **** volatile uint8 SPI_swStatusTx;
  37:Generated_Source\PSoC5/SPI.c **** volatile uint8 SPI_swStatusRx;
  38:Generated_Source\PSoC5/SPI.c **** 
  39:Generated_Source\PSoC5/SPI.c **** 
  40:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_Init
  42:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
  43:Generated_Source\PSoC5/SPI.c **** *
  44:Generated_Source\PSoC5/SPI.c **** * Summary:
  45:Generated_Source\PSoC5/SPI.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC5/SPI.c **** *
  47:Generated_Source\PSoC5/SPI.c **** * Parameters:
  48:Generated_Source\PSoC5/SPI.c **** *  None.
  49:Generated_Source\PSoC5/SPI.c **** *
  50:Generated_Source\PSoC5/SPI.c **** * Return:
  51:Generated_Source\PSoC5/SPI.c **** *  None.
  52:Generated_Source\PSoC5/SPI.c **** *
  53:Generated_Source\PSoC5/SPI.c **** * Side Effects:
  54:Generated_Source\PSoC5/SPI.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC5/SPI.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC5/SPI.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC5/SPI.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC5/SPI.c **** *
  59:Generated_Source\PSoC5/SPI.c **** * Reentrant:
  60:Generated_Source\PSoC5/SPI.c **** *  No.
  61:Generated_Source\PSoC5/SPI.c **** *
  62:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
  63:Generated_Source\PSoC5/SPI.c **** void SPI_Init(void) 
  64:Generated_Source\PSoC5/SPI.c **** {
  65:Generated_Source\PSoC5/SPI.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC5/SPI.c ****     SPI_COUNTER_PERIOD_REG = SPI_BITCTR_INIT;
  67:Generated_Source\PSoC5/SPI.c **** 
  68:Generated_Source\PSoC5/SPI.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC5/SPI.c ****         CyIntDisable         (SPI_TX_ISR_NUMBER);
  71:Generated_Source\PSoC5/SPI.c ****         CyIntSetPriority     (SPI_TX_ISR_NUMBER,  SPI_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC5/SPI.c ****         (void) CyIntSetVector(SPI_TX_ISR_NUMBER, &SPI_TX_ISR);
  73:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC5/SPI.c **** 
  75:Generated_Source\PSoC5/SPI.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC5/SPI.c ****         CyIntDisable         (SPI_RX_ISR_NUMBER);
  78:Generated_Source\PSoC5/SPI.c ****         CyIntSetPriority     (SPI_RX_ISR_NUMBER,  SPI_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC5/SPI.c ****         (void) CyIntSetVector(SPI_RX_ISR_NUMBER, &SPI_RX_ISR);
  80:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC5/SPI.c **** 
  82:Generated_Source\PSoC5/SPI.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC5/SPI.c ****     SPI_ClearFIFO();
  84:Generated_Source\PSoC5/SPI.c **** 
  85:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferFull  = 0u;
  87:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferRead  = 0u;
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 3


  88:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferWrite = 0u;
  89:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC5/SPI.c **** 
  91:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferFull  = 0u;
  93:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferRead  = 0u;
  94:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferWrite = 0u;
  95:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC5/SPI.c **** 
  97:Generated_Source\PSoC5/SPI.c ****     (void) SPI_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  98:Generated_Source\PSoC5/SPI.c ****     (void) SPI_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  99:Generated_Source\PSoC5/SPI.c **** 
 100:Generated_Source\PSoC5/SPI.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_MASK_REG = SPI_TX_INIT_INTERRUPTS_MASK;
 102:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_MASK_REG = SPI_RX_INIT_INTERRUPTS_MASK;
 103:Generated_Source\PSoC5/SPI.c **** }
 104:Generated_Source\PSoC5/SPI.c **** 
 105:Generated_Source\PSoC5/SPI.c **** 
 106:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 107:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_Enable
 108:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 109:Generated_Source\PSoC5/SPI.c **** *
 110:Generated_Source\PSoC5/SPI.c **** * Summary:
 111:Generated_Source\PSoC5/SPI.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC5/SPI.c **** *
 113:Generated_Source\PSoC5/SPI.c **** * Parameters:
 114:Generated_Source\PSoC5/SPI.c **** *  None.
 115:Generated_Source\PSoC5/SPI.c **** *
 116:Generated_Source\PSoC5/SPI.c **** * Return:
 117:Generated_Source\PSoC5/SPI.c **** *  None.
 118:Generated_Source\PSoC5/SPI.c **** *
 119:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 120:Generated_Source\PSoC5/SPI.c **** void SPI_Enable(void) 
 121:Generated_Source\PSoC5/SPI.c **** {
  28              		.loc 1 121 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 122:Generated_Source\PSoC5/SPI.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC5/SPI.c **** 
 124:Generated_Source\PSoC5/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 124 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 125:Generated_Source\PSoC5/SPI.c ****     SPI_COUNTER_CONTROL_REG |= SPI_CNTR_ENABLE;
  39              		.loc 1 125 0
  40 0006 0A4A     		ldr	r2, .L3
  41 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  42 000a 43F02003 		orr	r3, r3, #32
  43 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_ACTL_REG  |= SPI_INT_ENABLE;
  44              		.loc 1 126 0
  45 0010 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 4


  46 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  47 0014 43F01003 		orr	r3, r3, #16
  48 0018 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_ACTL_REG  |= SPI_INT_ENABLE;
  49              		.loc 1 127 0
  50 001a FF32     		adds	r2, r2, #255
  51 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  52 001e 43F01003 		orr	r3, r3, #16
  53 0022 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC5/SPI.c ****     CyExitCriticalSection(enableInterrupts);
  54              		.loc 1 128 0
  55 0024 FFF7FEFF 		bl	CyExitCriticalSection
  56              	.LVL1:
 129:Generated_Source\PSoC5/SPI.c **** 
 130:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_CLOCK)
 131:Generated_Source\PSoC5/SPI.c ****         SPI_IntClock_Enable();
  57              		.loc 1 131 0
  58 0028 FFF7FEFF 		bl	SPI_IntClock_Start
  59              	.LVL2:
  60 002c 08BD     		pop	{r3, pc}
  61              	.L4:
  62 002e 00BF     		.align	2
  63              	.L3:
  64 0030 96640040 		.word	1073767574
  65              		.cfi_endproc
  66              	.LFE1:
  67              		.size	SPI_Enable, .-SPI_Enable
  68              		.section	.text.SPI_Stop,"ax",%progbits
  69              		.align	2
  70              		.global	SPI_Stop
  71              		.thumb
  72              		.thumb_func
  73              		.type	SPI_Stop, %function
  74              	SPI_Stop:
  75              	.LFB3:
 132:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC5/SPI.c **** 
 134:Generated_Source\PSoC5/SPI.c ****     SPI_EnableTxInt();
 135:Generated_Source\PSoC5/SPI.c ****     SPI_EnableRxInt();
 136:Generated_Source\PSoC5/SPI.c **** }
 137:Generated_Source\PSoC5/SPI.c **** 
 138:Generated_Source\PSoC5/SPI.c **** 
 139:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 140:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_Start
 141:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 142:Generated_Source\PSoC5/SPI.c **** *
 143:Generated_Source\PSoC5/SPI.c **** * Summary:
 144:Generated_Source\PSoC5/SPI.c **** *  Initialize and Enable the SPI Master component.
 145:Generated_Source\PSoC5/SPI.c **** *
 146:Generated_Source\PSoC5/SPI.c **** * Parameters:
 147:Generated_Source\PSoC5/SPI.c **** *  None.
 148:Generated_Source\PSoC5/SPI.c **** *
 149:Generated_Source\PSoC5/SPI.c **** * Return:
 150:Generated_Source\PSoC5/SPI.c **** *  None.
 151:Generated_Source\PSoC5/SPI.c **** *
 152:Generated_Source\PSoC5/SPI.c **** * Global variables:
 153:Generated_Source\PSoC5/SPI.c **** *  SPI_initVar - used to check initial configuration, modified on
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 5


 154:Generated_Source\PSoC5/SPI.c **** *  first function call.
 155:Generated_Source\PSoC5/SPI.c **** *
 156:Generated_Source\PSoC5/SPI.c **** * Theory:
 157:Generated_Source\PSoC5/SPI.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC5/SPI.c **** *
 159:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 160:Generated_Source\PSoC5/SPI.c **** *  No.
 161:Generated_Source\PSoC5/SPI.c **** *
 162:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 163:Generated_Source\PSoC5/SPI.c **** void SPI_Start(void) 
 164:Generated_Source\PSoC5/SPI.c **** {
 165:Generated_Source\PSoC5/SPI.c ****     if(0u == SPI_initVar)
 166:Generated_Source\PSoC5/SPI.c ****     {
 167:Generated_Source\PSoC5/SPI.c ****         SPI_Init();
 168:Generated_Source\PSoC5/SPI.c ****         SPI_initVar = 1u;
 169:Generated_Source\PSoC5/SPI.c ****     }
 170:Generated_Source\PSoC5/SPI.c **** 
 171:Generated_Source\PSoC5/SPI.c ****     SPI_Enable();
 172:Generated_Source\PSoC5/SPI.c **** }
 173:Generated_Source\PSoC5/SPI.c **** 
 174:Generated_Source\PSoC5/SPI.c **** 
 175:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_Stop
 177:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 178:Generated_Source\PSoC5/SPI.c **** *
 179:Generated_Source\PSoC5/SPI.c **** * Summary:
 180:Generated_Source\PSoC5/SPI.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC5/SPI.c **** *
 182:Generated_Source\PSoC5/SPI.c **** * Parameters:
 183:Generated_Source\PSoC5/SPI.c **** *  None.
 184:Generated_Source\PSoC5/SPI.c **** *
 185:Generated_Source\PSoC5/SPI.c **** * Return:
 186:Generated_Source\PSoC5/SPI.c **** *  None.
 187:Generated_Source\PSoC5/SPI.c **** *
 188:Generated_Source\PSoC5/SPI.c **** * Theory:
 189:Generated_Source\PSoC5/SPI.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC5/SPI.c **** *
 191:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 192:Generated_Source\PSoC5/SPI.c **** void SPI_Stop(void) 
 193:Generated_Source\PSoC5/SPI.c **** {
  76              		.loc 1 193 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80 0000 08B5     		push	{r3, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 3, -8
  83              		.cfi_offset 14, -4
 194:Generated_Source\PSoC5/SPI.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC5/SPI.c **** 
 196:Generated_Source\PSoC5/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
  84              		.loc 1 196 0
  85 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  86              	.LVL3:
 197:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_ACTL_REG &= ((uint8) ~SPI_INT_ENABLE);
  87              		.loc 1 197 0
  88 0006 074A     		ldr	r2, .L7
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 6


  89 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  90 000a 03F0EF03 		and	r3, r3, #239
  91 000e 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_ACTL_REG &= ((uint8) ~SPI_INT_ENABLE);
  92              		.loc 1 198 0
  93 0010 FF32     		adds	r2, r2, #255
  94 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  95 0014 03F0EF03 		and	r3, r3, #239
  96 0018 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/SPI.c ****     CyExitCriticalSection(enableInterrupts);
  97              		.loc 1 199 0
  98 001a FFF7FEFF 		bl	CyExitCriticalSection
  99              	.LVL4:
 200:Generated_Source\PSoC5/SPI.c **** 
 201:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_CLOCK)
 202:Generated_Source\PSoC5/SPI.c ****         SPI_IntClock_Disable();
 100              		.loc 1 202 0
 101 001e FFF7FEFF 		bl	SPI_IntClock_Stop
 102              	.LVL5:
 103 0022 08BD     		pop	{r3, pc}
 104              	.L8:
 105              		.align	2
 106              	.L7:
 107 0024 97640040 		.word	1073767575
 108              		.cfi_endproc
 109              	.LFE3:
 110              		.size	SPI_Stop, .-SPI_Stop
 111              		.section	.text.SPI_EnableTxInt,"ax",%progbits
 112              		.align	2
 113              		.global	SPI_EnableTxInt
 114              		.thumb
 115              		.thumb_func
 116              		.type	SPI_EnableTxInt, %function
 117              	SPI_EnableTxInt:
 118              	.LFB4:
 203:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC5/SPI.c **** 
 205:Generated_Source\PSoC5/SPI.c ****     SPI_DisableTxInt();
 206:Generated_Source\PSoC5/SPI.c ****     SPI_DisableRxInt();
 207:Generated_Source\PSoC5/SPI.c **** }
 208:Generated_Source\PSoC5/SPI.c **** 
 209:Generated_Source\PSoC5/SPI.c **** 
 210:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 211:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_EnableTxInt
 212:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 213:Generated_Source\PSoC5/SPI.c **** *
 214:Generated_Source\PSoC5/SPI.c **** * Summary:
 215:Generated_Source\PSoC5/SPI.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC5/SPI.c **** *
 217:Generated_Source\PSoC5/SPI.c **** * Parameters:
 218:Generated_Source\PSoC5/SPI.c **** *  None.
 219:Generated_Source\PSoC5/SPI.c **** *
 220:Generated_Source\PSoC5/SPI.c **** * Return:
 221:Generated_Source\PSoC5/SPI.c **** *  None.
 222:Generated_Source\PSoC5/SPI.c **** *
 223:Generated_Source\PSoC5/SPI.c **** * Theory:
 224:Generated_Source\PSoC5/SPI.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 7


 225:Generated_Source\PSoC5/SPI.c **** *
 226:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 227:Generated_Source\PSoC5/SPI.c **** void SPI_EnableTxInt(void) 
 228:Generated_Source\PSoC5/SPI.c **** {
 119              		.loc 1 228 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124 0000 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE4:
 127              		.size	SPI_EnableTxInt, .-SPI_EnableTxInt
 128 0002 00BF     		.section	.text.SPI_EnableRxInt,"ax",%progbits
 129              		.align	2
 130              		.global	SPI_EnableRxInt
 131              		.thumb
 132              		.thumb_func
 133              		.type	SPI_EnableRxInt, %function
 134              	SPI_EnableRxInt:
 135              	.LFB5:
 229:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC5/SPI.c ****         CyIntEnable(SPI_TX_ISR_NUMBER);
 231:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC5/SPI.c **** }
 233:Generated_Source\PSoC5/SPI.c **** 
 234:Generated_Source\PSoC5/SPI.c **** 
 235:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 236:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_EnableRxInt
 237:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 238:Generated_Source\PSoC5/SPI.c **** *
 239:Generated_Source\PSoC5/SPI.c **** * Summary:
 240:Generated_Source\PSoC5/SPI.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC5/SPI.c **** *
 242:Generated_Source\PSoC5/SPI.c **** * Parameters:
 243:Generated_Source\PSoC5/SPI.c **** *  None.
 244:Generated_Source\PSoC5/SPI.c **** *
 245:Generated_Source\PSoC5/SPI.c **** * Return:
 246:Generated_Source\PSoC5/SPI.c **** *  None.
 247:Generated_Source\PSoC5/SPI.c **** *
 248:Generated_Source\PSoC5/SPI.c **** * Theory:
 249:Generated_Source\PSoC5/SPI.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC5/SPI.c **** *
 251:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 252:Generated_Source\PSoC5/SPI.c **** void SPI_EnableRxInt(void) 
 253:Generated_Source\PSoC5/SPI.c **** {
 136              		.loc 1 253 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 141 0000 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE5:
 144              		.size	SPI_EnableRxInt, .-SPI_EnableRxInt
 145 0002 00BF     		.section	.text.SPI_DisableTxInt,"ax",%progbits
 146              		.align	2
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 8


 147              		.global	SPI_DisableTxInt
 148              		.thumb
 149              		.thumb_func
 150              		.type	SPI_DisableTxInt, %function
 151              	SPI_DisableTxInt:
 152              	.LFB6:
 254:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC5/SPI.c ****         CyIntEnable(SPI_RX_ISR_NUMBER);
 256:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC5/SPI.c **** }
 258:Generated_Source\PSoC5/SPI.c **** 
 259:Generated_Source\PSoC5/SPI.c **** 
 260:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 261:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_DisableTxInt
 262:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 263:Generated_Source\PSoC5/SPI.c **** *
 264:Generated_Source\PSoC5/SPI.c **** * Summary:
 265:Generated_Source\PSoC5/SPI.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC5/SPI.c **** *
 267:Generated_Source\PSoC5/SPI.c **** * Parameters:
 268:Generated_Source\PSoC5/SPI.c **** *  None.
 269:Generated_Source\PSoC5/SPI.c **** *
 270:Generated_Source\PSoC5/SPI.c **** * Return:
 271:Generated_Source\PSoC5/SPI.c **** *  None.
 272:Generated_Source\PSoC5/SPI.c **** *
 273:Generated_Source\PSoC5/SPI.c **** * Theory:
 274:Generated_Source\PSoC5/SPI.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC5/SPI.c **** *
 276:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 277:Generated_Source\PSoC5/SPI.c **** void SPI_DisableTxInt(void) 
 278:Generated_Source\PSoC5/SPI.c **** {
 153              		.loc 1 278 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE6:
 161              		.size	SPI_DisableTxInt, .-SPI_DisableTxInt
 162 0002 00BF     		.section	.text.SPI_DisableRxInt,"ax",%progbits
 163              		.align	2
 164              		.global	SPI_DisableRxInt
 165              		.thumb
 166              		.thumb_func
 167              		.type	SPI_DisableRxInt, %function
 168              	SPI_DisableRxInt:
 169              	.LFB7:
 279:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC5/SPI.c ****         CyIntDisable(SPI_TX_ISR_NUMBER);
 281:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC5/SPI.c **** }
 283:Generated_Source\PSoC5/SPI.c **** 
 284:Generated_Source\PSoC5/SPI.c **** 
 285:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_DisableRxInt
 287:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 9


 288:Generated_Source\PSoC5/SPI.c **** *
 289:Generated_Source\PSoC5/SPI.c **** * Summary:
 290:Generated_Source\PSoC5/SPI.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC5/SPI.c **** *
 292:Generated_Source\PSoC5/SPI.c **** * Parameters:
 293:Generated_Source\PSoC5/SPI.c **** *  None.
 294:Generated_Source\PSoC5/SPI.c **** *
 295:Generated_Source\PSoC5/SPI.c **** * Return:
 296:Generated_Source\PSoC5/SPI.c **** *  None.
 297:Generated_Source\PSoC5/SPI.c **** *
 298:Generated_Source\PSoC5/SPI.c **** * Theory:
 299:Generated_Source\PSoC5/SPI.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC5/SPI.c **** *
 301:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/SPI.c **** void SPI_DisableRxInt(void) 
 303:Generated_Source\PSoC5/SPI.c **** {
 170              		.loc 1 303 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175 0000 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE7:
 178              		.size	SPI_DisableRxInt, .-SPI_DisableRxInt
 179 0002 00BF     		.section	.text.SPI_SetTxInterruptMode,"ax",%progbits
 180              		.align	2
 181              		.global	SPI_SetTxInterruptMode
 182              		.thumb
 183              		.thumb_func
 184              		.type	SPI_SetTxInterruptMode, %function
 185              	SPI_SetTxInterruptMode:
 186              	.LFB8:
 304:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC5/SPI.c ****         CyIntDisable(SPI_RX_ISR_NUMBER);
 306:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC5/SPI.c **** }
 308:Generated_Source\PSoC5/SPI.c **** 
 309:Generated_Source\PSoC5/SPI.c **** 
 310:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 311:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_SetTxInterruptMode
 312:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 313:Generated_Source\PSoC5/SPI.c **** *
 314:Generated_Source\PSoC5/SPI.c **** * Summary:
 315:Generated_Source\PSoC5/SPI.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC5/SPI.c **** *
 317:Generated_Source\PSoC5/SPI.c **** * Parameters:
 318:Generated_Source\PSoC5/SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC5/SPI.c **** *  header file).
 320:Generated_Source\PSoC5/SPI.c **** *
 321:Generated_Source\PSoC5/SPI.c **** * Return:
 322:Generated_Source\PSoC5/SPI.c **** *  None.
 323:Generated_Source\PSoC5/SPI.c **** *
 324:Generated_Source\PSoC5/SPI.c **** * Theory:
 325:Generated_Source\PSoC5/SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC5/SPI.c **** *
 327:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 10


 328:Generated_Source\PSoC5/SPI.c **** void SPI_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC5/SPI.c **** {
 187              		.loc 1 329 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 192              	.LVL6:
 330:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_MASK_REG = intSrc;
 193              		.loc 1 330 0
 194 0000 014B     		ldr	r3, .L14
 195 0002 1870     		strb	r0, [r3]
 196 0004 7047     		bx	lr
 197              	.L15:
 198 0006 00BF     		.align	2
 199              	.L14:
 200 0008 87640040 		.word	1073767559
 201              		.cfi_endproc
 202              	.LFE8:
 203              		.size	SPI_SetTxInterruptMode, .-SPI_SetTxInterruptMode
 204              		.section	.text.SPI_SetRxInterruptMode,"ax",%progbits
 205              		.align	2
 206              		.global	SPI_SetRxInterruptMode
 207              		.thumb
 208              		.thumb_func
 209              		.type	SPI_SetRxInterruptMode, %function
 210              	SPI_SetRxInterruptMode:
 211              	.LFB9:
 331:Generated_Source\PSoC5/SPI.c **** }
 332:Generated_Source\PSoC5/SPI.c **** 
 333:Generated_Source\PSoC5/SPI.c **** 
 334:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 335:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_SetRxInterruptMode
 336:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 337:Generated_Source\PSoC5/SPI.c **** *
 338:Generated_Source\PSoC5/SPI.c **** * Summary:
 339:Generated_Source\PSoC5/SPI.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC5/SPI.c **** *
 341:Generated_Source\PSoC5/SPI.c **** * Parameters:
 342:Generated_Source\PSoC5/SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC5/SPI.c **** *  header file).
 344:Generated_Source\PSoC5/SPI.c **** *
 345:Generated_Source\PSoC5/SPI.c **** * Return:
 346:Generated_Source\PSoC5/SPI.c **** *  None.
 347:Generated_Source\PSoC5/SPI.c **** *
 348:Generated_Source\PSoC5/SPI.c **** * Theory:
 349:Generated_Source\PSoC5/SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC5/SPI.c **** *
 351:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 352:Generated_Source\PSoC5/SPI.c **** void SPI_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC5/SPI.c **** {
 212              		.loc 1 353 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              	.LVL7:
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 11


 354:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_MASK_REG  = intSrc;
 218              		.loc 1 354 0
 219 0000 014B     		ldr	r3, .L17
 220 0002 1870     		strb	r0, [r3]
 221 0004 7047     		bx	lr
 222              	.L18:
 223 0006 00BF     		.align	2
 224              	.L17:
 225 0008 86650040 		.word	1073767814
 226              		.cfi_endproc
 227              	.LFE9:
 228              		.size	SPI_SetRxInterruptMode, .-SPI_SetRxInterruptMode
 229              		.section	.text.SPI_ReadTxStatus,"ax",%progbits
 230              		.align	2
 231              		.global	SPI_ReadTxStatus
 232              		.thumb
 233              		.thumb_func
 234              		.type	SPI_ReadTxStatus, %function
 235              	SPI_ReadTxStatus:
 236              	.LFB10:
 355:Generated_Source\PSoC5/SPI.c **** }
 356:Generated_Source\PSoC5/SPI.c **** 
 357:Generated_Source\PSoC5/SPI.c **** 
 358:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 359:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ReadTxStatus
 360:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 361:Generated_Source\PSoC5/SPI.c **** *
 362:Generated_Source\PSoC5/SPI.c **** * Summary:
 363:Generated_Source\PSoC5/SPI.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC5/SPI.c **** *
 365:Generated_Source\PSoC5/SPI.c **** * Parameters:
 366:Generated_Source\PSoC5/SPI.c **** *  None.
 367:Generated_Source\PSoC5/SPI.c **** *
 368:Generated_Source\PSoC5/SPI.c **** * Return:
 369:Generated_Source\PSoC5/SPI.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC5/SPI.c **** *
 371:Generated_Source\PSoC5/SPI.c **** * Global variables:
 372:Generated_Source\PSoC5/SPI.c **** *  SPI_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC5/SPI.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC5/SPI.c **** *
 375:Generated_Source\PSoC5/SPI.c **** * Theory:
 376:Generated_Source\PSoC5/SPI.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC5/SPI.c **** *  detection and flow control.
 378:Generated_Source\PSoC5/SPI.c **** *
 379:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 380:Generated_Source\PSoC5/SPI.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC5/SPI.c **** *
 382:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 383:Generated_Source\PSoC5/SPI.c **** *  No.
 384:Generated_Source\PSoC5/SPI.c **** *
 385:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 386:Generated_Source\PSoC5/SPI.c **** uint8 SPI_ReadTxStatus(void) 
 387:Generated_Source\PSoC5/SPI.c **** {
 237              		.loc 1 387 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 12


 241              		@ link register save eliminated.
 388:Generated_Source\PSoC5/SPI.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC5/SPI.c **** 
 390:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC5/SPI.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC5/SPI.c ****         SPI_DisableTxInt();
 393:Generated_Source\PSoC5/SPI.c **** 
 394:Generated_Source\PSoC5/SPI.c ****         tmpStatus = SPI_GET_STATUS_TX(SPI_swStatusTx);
 395:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusTx = 0u;
 396:Generated_Source\PSoC5/SPI.c **** 
 397:Generated_Source\PSoC5/SPI.c ****         SPI_EnableTxInt();
 398:Generated_Source\PSoC5/SPI.c **** 
 399:Generated_Source\PSoC5/SPI.c ****     #else
 400:Generated_Source\PSoC5/SPI.c **** 
 401:Generated_Source\PSoC5/SPI.c ****         tmpStatus = SPI_TX_STATUS_REG;
 242              		.loc 1 401 0
 243 0000 014B     		ldr	r3, .L20
 244 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 245              	.LVL8:
 402:Generated_Source\PSoC5/SPI.c **** 
 403:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC5/SPI.c **** 
 405:Generated_Source\PSoC5/SPI.c ****     return(tmpStatus);
 406:Generated_Source\PSoC5/SPI.c **** }
 246              		.loc 1 406 0
 247 0004 7047     		bx	lr
 248              	.L21:
 249 0006 00BF     		.align	2
 250              	.L20:
 251 0008 67640040 		.word	1073767527
 252              		.cfi_endproc
 253              	.LFE10:
 254              		.size	SPI_ReadTxStatus, .-SPI_ReadTxStatus
 255              		.section	.text.SPI_ReadRxStatus,"ax",%progbits
 256              		.align	2
 257              		.global	SPI_ReadRxStatus
 258              		.thumb
 259              		.thumb_func
 260              		.type	SPI_ReadRxStatus, %function
 261              	SPI_ReadRxStatus:
 262              	.LFB11:
 407:Generated_Source\PSoC5/SPI.c **** 
 408:Generated_Source\PSoC5/SPI.c **** 
 409:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 410:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ReadRxStatus
 411:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 412:Generated_Source\PSoC5/SPI.c **** *
 413:Generated_Source\PSoC5/SPI.c **** * Summary:
 414:Generated_Source\PSoC5/SPI.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC5/SPI.c **** *
 416:Generated_Source\PSoC5/SPI.c **** * Parameters:
 417:Generated_Source\PSoC5/SPI.c **** *  None.
 418:Generated_Source\PSoC5/SPI.c **** *
 419:Generated_Source\PSoC5/SPI.c **** * Return:
 420:Generated_Source\PSoC5/SPI.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC5/SPI.c **** *
 422:Generated_Source\PSoC5/SPI.c **** * Global variables:
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 13


 423:Generated_Source\PSoC5/SPI.c **** *  SPI_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC5/SPI.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC5/SPI.c **** *
 426:Generated_Source\PSoC5/SPI.c **** * Theory:
 427:Generated_Source\PSoC5/SPI.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC5/SPI.c **** *  detection and flow control.
 429:Generated_Source\PSoC5/SPI.c **** *
 430:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 431:Generated_Source\PSoC5/SPI.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC5/SPI.c **** *
 433:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 434:Generated_Source\PSoC5/SPI.c **** *  No.
 435:Generated_Source\PSoC5/SPI.c **** *
 436:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 437:Generated_Source\PSoC5/SPI.c **** uint8 SPI_ReadRxStatus(void) 
 438:Generated_Source\PSoC5/SPI.c **** {
 263              		.loc 1 438 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 439:Generated_Source\PSoC5/SPI.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC5/SPI.c **** 
 441:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC5/SPI.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC5/SPI.c ****         SPI_DisableRxInt();
 444:Generated_Source\PSoC5/SPI.c **** 
 445:Generated_Source\PSoC5/SPI.c ****         tmpStatus = SPI_GET_STATUS_RX(SPI_swStatusRx);
 446:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusRx = 0u;
 447:Generated_Source\PSoC5/SPI.c **** 
 448:Generated_Source\PSoC5/SPI.c ****         SPI_EnableRxInt();
 449:Generated_Source\PSoC5/SPI.c **** 
 450:Generated_Source\PSoC5/SPI.c ****     #else
 451:Generated_Source\PSoC5/SPI.c **** 
 452:Generated_Source\PSoC5/SPI.c ****         tmpStatus = SPI_RX_STATUS_REG;
 268              		.loc 1 452 0
 269 0000 014B     		ldr	r3, .L23
 270 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 271              	.LVL9:
 453:Generated_Source\PSoC5/SPI.c **** 
 454:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC5/SPI.c **** 
 456:Generated_Source\PSoC5/SPI.c ****     return(tmpStatus);
 457:Generated_Source\PSoC5/SPI.c **** }
 272              		.loc 1 457 0
 273 0004 7047     		bx	lr
 274              	.L24:
 275 0006 00BF     		.align	2
 276              	.L23:
 277 0008 66650040 		.word	1073767782
 278              		.cfi_endproc
 279              	.LFE11:
 280              		.size	SPI_ReadRxStatus, .-SPI_ReadRxStatus
 281              		.section	.text.SPI_WriteTxData,"ax",%progbits
 282              		.align	2
 283              		.global	SPI_WriteTxData
 284              		.thumb
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 14


 285              		.thumb_func
 286              		.type	SPI_WriteTxData, %function
 287              	SPI_WriteTxData:
 288              	.LFB12:
 458:Generated_Source\PSoC5/SPI.c **** 
 459:Generated_Source\PSoC5/SPI.c **** 
 460:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 461:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_WriteTxData
 462:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 463:Generated_Source\PSoC5/SPI.c **** *
 464:Generated_Source\PSoC5/SPI.c **** * Summary:
 465:Generated_Source\PSoC5/SPI.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC5/SPI.c **** *
 467:Generated_Source\PSoC5/SPI.c **** * Parameters:
 468:Generated_Source\PSoC5/SPI.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC5/SPI.c **** *
 470:Generated_Source\PSoC5/SPI.c **** * Return:
 471:Generated_Source\PSoC5/SPI.c **** *  None.
 472:Generated_Source\PSoC5/SPI.c **** *
 473:Generated_Source\PSoC5/SPI.c **** * Global variables:
 474:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC5/SPI.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC5/SPI.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC5/SPI.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC5/SPI.c **** *  SPI_txBuffer[SPI_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC5/SPI.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC5/SPI.c **** *
 482:Generated_Source\PSoC5/SPI.c **** * Theory:
 483:Generated_Source\PSoC5/SPI.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC5/SPI.c **** *
 485:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 486:Generated_Source\PSoC5/SPI.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC5/SPI.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC5/SPI.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC5/SPI.c **** *
 490:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 491:Generated_Source\PSoC5/SPI.c **** *  No.
 492:Generated_Source\PSoC5/SPI.c **** *
 493:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 494:Generated_Source\PSoC5/SPI.c **** void SPI_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC5/SPI.c **** {
 289              		.loc 1 495 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 294              	.LVL10:
 295              	.L26:
 496:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC5/SPI.c **** 
 498:Generated_Source\PSoC5/SPI.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC5/SPI.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC5/SPI.c **** 
 501:Generated_Source\PSoC5/SPI.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC5/SPI.c ****         do
 503:Generated_Source\PSoC5/SPI.c ****         {
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 15


 504:Generated_Source\PSoC5/SPI.c ****             tmpTxBufferRead = SPI_txBufferRead;
 505:Generated_Source\PSoC5/SPI.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC5/SPI.c ****             {
 507:Generated_Source\PSoC5/SPI.c ****                 tmpTxBufferRead = (SPI_TX_BUFFER_SIZE - 1u);
 508:Generated_Source\PSoC5/SPI.c ****             }
 509:Generated_Source\PSoC5/SPI.c ****             else
 510:Generated_Source\PSoC5/SPI.c ****             {
 511:Generated_Source\PSoC5/SPI.c ****                 tmpTxBufferRead--;
 512:Generated_Source\PSoC5/SPI.c ****             }
 513:Generated_Source\PSoC5/SPI.c **** 
 514:Generated_Source\PSoC5/SPI.c ****         }while(tmpTxBufferRead == SPI_txBufferWrite);
 515:Generated_Source\PSoC5/SPI.c **** 
 516:Generated_Source\PSoC5/SPI.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC5/SPI.c ****         SPI_DisableTxInt();
 518:Generated_Source\PSoC5/SPI.c **** 
 519:Generated_Source\PSoC5/SPI.c ****         tempStatus = SPI_GET_STATUS_TX(SPI_swStatusTx);
 520:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusTx = tempStatus;
 521:Generated_Source\PSoC5/SPI.c **** 
 522:Generated_Source\PSoC5/SPI.c **** 
 523:Generated_Source\PSoC5/SPI.c ****         if((SPI_txBufferRead == SPI_txBufferWrite) &&
 524:Generated_Source\PSoC5/SPI.c ****            (0u != (SPI_swStatusTx & SPI_STS_TX_FIFO_NOT_FULL)))
 525:Generated_Source\PSoC5/SPI.c ****         {
 526:Generated_Source\PSoC5/SPI.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC5/SPI.c ****             CY_SET_REG8(SPI_TXDATA_PTR, txData);
 528:Generated_Source\PSoC5/SPI.c ****         }
 529:Generated_Source\PSoC5/SPI.c ****         else
 530:Generated_Source\PSoC5/SPI.c ****         {
 531:Generated_Source\PSoC5/SPI.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC5/SPI.c ****             SPI_txBufferWrite++;
 533:Generated_Source\PSoC5/SPI.c ****             if(SPI_txBufferWrite >= SPI_TX_BUFFER_SIZE)
 534:Generated_Source\PSoC5/SPI.c ****             {
 535:Generated_Source\PSoC5/SPI.c ****                 SPI_txBufferWrite = 0u;
 536:Generated_Source\PSoC5/SPI.c ****             }
 537:Generated_Source\PSoC5/SPI.c **** 
 538:Generated_Source\PSoC5/SPI.c ****             if(SPI_txBufferWrite == SPI_txBufferRead)
 539:Generated_Source\PSoC5/SPI.c ****             {
 540:Generated_Source\PSoC5/SPI.c ****                 SPI_txBufferRead++;
 541:Generated_Source\PSoC5/SPI.c ****                 if(SPI_txBufferRead >= SPI_TX_BUFFER_SIZE)
 542:Generated_Source\PSoC5/SPI.c ****                 {
 543:Generated_Source\PSoC5/SPI.c ****                     SPI_txBufferRead = 0u;
 544:Generated_Source\PSoC5/SPI.c ****                 }
 545:Generated_Source\PSoC5/SPI.c ****                 SPI_txBufferFull = 1u;
 546:Generated_Source\PSoC5/SPI.c ****             }
 547:Generated_Source\PSoC5/SPI.c **** 
 548:Generated_Source\PSoC5/SPI.c ****             SPI_txBuffer[SPI_txBufferWrite] = txData;
 549:Generated_Source\PSoC5/SPI.c **** 
 550:Generated_Source\PSoC5/SPI.c ****             SPI_TX_STATUS_MASK_REG |= SPI_STS_TX_FIFO_NOT_FULL;
 551:Generated_Source\PSoC5/SPI.c ****         }
 552:Generated_Source\PSoC5/SPI.c **** 
 553:Generated_Source\PSoC5/SPI.c ****         SPI_EnableTxInt();
 554:Generated_Source\PSoC5/SPI.c **** 
 555:Generated_Source\PSoC5/SPI.c ****     #else
 556:Generated_Source\PSoC5/SPI.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC5/SPI.c ****         while(0u == (SPI_TX_STATUS_REG & SPI_STS_TX_FIFO_NOT_FULL))
 296              		.loc 1 557 0 discriminator 1
 297 0000 034B     		ldr	r3, .L27
 298 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 16


 299 0004 13F0040F 		tst	r3, #4
 300 0008 FAD0     		beq	.L26
 558:Generated_Source\PSoC5/SPI.c ****         {
 559:Generated_Source\PSoC5/SPI.c ****         }
 560:Generated_Source\PSoC5/SPI.c **** 
 561:Generated_Source\PSoC5/SPI.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC5/SPI.c ****         CY_SET_REG8(SPI_TXDATA_PTR, txData);
 301              		.loc 1 562 0
 302 000a 024B     		ldr	r3, .L27+4
 303 000c 1870     		strb	r0, [r3]
 304 000e 7047     		bx	lr
 305              	.L28:
 306              		.align	2
 307              	.L27:
 308 0010 67640040 		.word	1073767527
 309 0014 46640040 		.word	1073767494
 310              		.cfi_endproc
 311              	.LFE12:
 312              		.size	SPI_WriteTxData, .-SPI_WriteTxData
 313              		.section	.text.SPI_ReadRxData,"ax",%progbits
 314              		.align	2
 315              		.global	SPI_ReadRxData
 316              		.thumb
 317              		.thumb_func
 318              		.type	SPI_ReadRxData, %function
 319              	SPI_ReadRxData:
 320              	.LFB13:
 563:Generated_Source\PSoC5/SPI.c **** 
 564:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC5/SPI.c **** }
 566:Generated_Source\PSoC5/SPI.c **** 
 567:Generated_Source\PSoC5/SPI.c **** 
 568:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 569:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ReadRxData
 570:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 571:Generated_Source\PSoC5/SPI.c **** *
 572:Generated_Source\PSoC5/SPI.c **** * Summary:
 573:Generated_Source\PSoC5/SPI.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC5/SPI.c **** *
 575:Generated_Source\PSoC5/SPI.c **** * Parameters:
 576:Generated_Source\PSoC5/SPI.c **** *  None.
 577:Generated_Source\PSoC5/SPI.c **** *
 578:Generated_Source\PSoC5/SPI.c **** * Return:
 579:Generated_Source\PSoC5/SPI.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC5/SPI.c **** *
 581:Generated_Source\PSoC5/SPI.c **** * Global variables:
 582:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC5/SPI.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC5/SPI.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC5/SPI.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBuffer[SPI_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC5/SPI.c **** *  received data.
 589:Generated_Source\PSoC5/SPI.c **** *
 590:Generated_Source\PSoC5/SPI.c **** * Theory:
 591:Generated_Source\PSoC5/SPI.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC5/SPI.c **** *
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 17


 593:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 594:Generated_Source\PSoC5/SPI.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC5/SPI.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC5/SPI.c **** *  ReadByte() function.
 597:Generated_Source\PSoC5/SPI.c **** *
 598:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 599:Generated_Source\PSoC5/SPI.c **** *  No.
 600:Generated_Source\PSoC5/SPI.c **** *
 601:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 602:Generated_Source\PSoC5/SPI.c **** uint8 SPI_ReadRxData(void) 
 603:Generated_Source\PSoC5/SPI.c **** {
 321              		.loc 1 603 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
 604:Generated_Source\PSoC5/SPI.c ****     uint8 rxData;
 605:Generated_Source\PSoC5/SPI.c **** 
 606:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC5/SPI.c **** 
 608:Generated_Source\PSoC5/SPI.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC5/SPI.c ****         SPI_DisableRxInt();
 610:Generated_Source\PSoC5/SPI.c **** 
 611:Generated_Source\PSoC5/SPI.c ****         if(SPI_rxBufferRead != SPI_rxBufferWrite)
 612:Generated_Source\PSoC5/SPI.c ****         {
 613:Generated_Source\PSoC5/SPI.c ****             if(0u == SPI_rxBufferFull)
 614:Generated_Source\PSoC5/SPI.c ****             {
 615:Generated_Source\PSoC5/SPI.c ****                 SPI_rxBufferRead++;
 616:Generated_Source\PSoC5/SPI.c ****                 if(SPI_rxBufferRead >= SPI_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC5/SPI.c ****                 {
 618:Generated_Source\PSoC5/SPI.c ****                     SPI_rxBufferRead = 0u;
 619:Generated_Source\PSoC5/SPI.c ****                 }
 620:Generated_Source\PSoC5/SPI.c ****             }
 621:Generated_Source\PSoC5/SPI.c ****             else
 622:Generated_Source\PSoC5/SPI.c ****             {
 623:Generated_Source\PSoC5/SPI.c ****                 SPI_rxBufferFull = 0u;
 624:Generated_Source\PSoC5/SPI.c ****             }
 625:Generated_Source\PSoC5/SPI.c ****         }
 626:Generated_Source\PSoC5/SPI.c **** 
 627:Generated_Source\PSoC5/SPI.c ****         rxData = SPI_rxBuffer[SPI_rxBufferRead];
 628:Generated_Source\PSoC5/SPI.c **** 
 629:Generated_Source\PSoC5/SPI.c ****         SPI_EnableRxInt();
 630:Generated_Source\PSoC5/SPI.c **** 
 631:Generated_Source\PSoC5/SPI.c ****     #else
 632:Generated_Source\PSoC5/SPI.c **** 
 633:Generated_Source\PSoC5/SPI.c ****         rxData = CY_GET_REG8(SPI_RXDATA_PTR);
 326              		.loc 1 633 0
 327 0000 014B     		ldr	r3, .L30
 328 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 329              	.LVL11:
 634:Generated_Source\PSoC5/SPI.c **** 
 635:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC5/SPI.c **** 
 637:Generated_Source\PSoC5/SPI.c ****     return(rxData);
 638:Generated_Source\PSoC5/SPI.c **** }
 330              		.loc 1 638 0
 331 0004 7047     		bx	lr
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 18


 332              	.L31:
 333 0006 00BF     		.align	2
 334              	.L30:
 335 0008 56640040 		.word	1073767510
 336              		.cfi_endproc
 337              	.LFE13:
 338              		.size	SPI_ReadRxData, .-SPI_ReadRxData
 339              		.section	.text.SPI_GetRxBufferSize,"ax",%progbits
 340              		.align	2
 341              		.global	SPI_GetRxBufferSize
 342              		.thumb
 343              		.thumb_func
 344              		.type	SPI_GetRxBufferSize, %function
 345              	SPI_GetRxBufferSize:
 346              	.LFB14:
 639:Generated_Source\PSoC5/SPI.c **** 
 640:Generated_Source\PSoC5/SPI.c **** 
 641:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 642:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_GetRxBufferSize
 643:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 644:Generated_Source\PSoC5/SPI.c **** *
 645:Generated_Source\PSoC5/SPI.c **** * Summary:
 646:Generated_Source\PSoC5/SPI.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC5/SPI.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC5/SPI.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC5/SPI.c **** *
 650:Generated_Source\PSoC5/SPI.c **** * Parameters:
 651:Generated_Source\PSoC5/SPI.c **** *  None.
 652:Generated_Source\PSoC5/SPI.c **** *
 653:Generated_Source\PSoC5/SPI.c **** * Return:
 654:Generated_Source\PSoC5/SPI.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC5/SPI.c **** *
 656:Generated_Source\PSoC5/SPI.c **** * Global variables:
 657:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC5/SPI.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC5/SPI.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC5/SPI.c **** *
 662:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 663:Generated_Source\PSoC5/SPI.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC5/SPI.c **** *
 665:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 666:Generated_Source\PSoC5/SPI.c **** uint8 SPI_GetRxBufferSize(void) 
 667:Generated_Source\PSoC5/SPI.c **** {
 347              		.loc 1 667 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 668:Generated_Source\PSoC5/SPI.c ****     uint8 size;
 669:Generated_Source\PSoC5/SPI.c **** 
 670:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC5/SPI.c **** 
 672:Generated_Source\PSoC5/SPI.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC5/SPI.c ****         SPI_DisableRxInt();
 674:Generated_Source\PSoC5/SPI.c **** 
 675:Generated_Source\PSoC5/SPI.c ****         if(SPI_rxBufferRead == SPI_rxBufferWrite)
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 19


 676:Generated_Source\PSoC5/SPI.c ****         {
 677:Generated_Source\PSoC5/SPI.c ****             size = 0u;
 678:Generated_Source\PSoC5/SPI.c ****         }
 679:Generated_Source\PSoC5/SPI.c ****         else if(SPI_rxBufferRead < SPI_rxBufferWrite)
 680:Generated_Source\PSoC5/SPI.c ****         {
 681:Generated_Source\PSoC5/SPI.c ****             size = (SPI_rxBufferWrite - SPI_rxBufferRead);
 682:Generated_Source\PSoC5/SPI.c ****         }
 683:Generated_Source\PSoC5/SPI.c ****         else
 684:Generated_Source\PSoC5/SPI.c ****         {
 685:Generated_Source\PSoC5/SPI.c ****             size = (SPI_RX_BUFFER_SIZE - SPI_rxBufferRead) + SPI_rxBufferWrite;
 686:Generated_Source\PSoC5/SPI.c ****         }
 687:Generated_Source\PSoC5/SPI.c **** 
 688:Generated_Source\PSoC5/SPI.c ****         SPI_EnableRxInt();
 689:Generated_Source\PSoC5/SPI.c **** 
 690:Generated_Source\PSoC5/SPI.c ****     #else
 691:Generated_Source\PSoC5/SPI.c **** 
 692:Generated_Source\PSoC5/SPI.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC5/SPI.c ****         size = (0u != (SPI_RX_STATUS_REG & SPI_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 352              		.loc 1 693 0
 353 0000 044B     		ldr	r3, .L35
 354 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 355 0004 13F0200F 		tst	r3, #32
 356 0008 01D0     		beq	.L34
 357 000a 0120     		movs	r0, #1
 358 000c 7047     		bx	lr
 359              	.L34:
 360 000e 0020     		movs	r0, #0
 361              	.LVL12:
 694:Generated_Source\PSoC5/SPI.c **** 
 695:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC5/SPI.c **** 
 697:Generated_Source\PSoC5/SPI.c ****     return(size);
 698:Generated_Source\PSoC5/SPI.c **** }
 362              		.loc 1 698 0
 363 0010 7047     		bx	lr
 364              	.L36:
 365 0012 00BF     		.align	2
 366              	.L35:
 367 0014 66650040 		.word	1073767782
 368              		.cfi_endproc
 369              	.LFE14:
 370              		.size	SPI_GetRxBufferSize, .-SPI_GetRxBufferSize
 371              		.section	.text.SPI_GetTxBufferSize,"ax",%progbits
 372              		.align	2
 373              		.global	SPI_GetTxBufferSize
 374              		.thumb
 375              		.thumb_func
 376              		.type	SPI_GetTxBufferSize, %function
 377              	SPI_GetTxBufferSize:
 378              	.LFB15:
 699:Generated_Source\PSoC5/SPI.c **** 
 700:Generated_Source\PSoC5/SPI.c **** 
 701:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 702:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_GetTxBufferSize
 703:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 704:Generated_Source\PSoC5/SPI.c **** *
 705:Generated_Source\PSoC5/SPI.c **** * Summary:
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 20


 706:Generated_Source\PSoC5/SPI.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC5/SPI.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC5/SPI.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC5/SPI.c **** *  Software Buffer.
 710:Generated_Source\PSoC5/SPI.c **** *
 711:Generated_Source\PSoC5/SPI.c **** * Parameters:
 712:Generated_Source\PSoC5/SPI.c **** *  None.
 713:Generated_Source\PSoC5/SPI.c **** *
 714:Generated_Source\PSoC5/SPI.c **** * Return:
 715:Generated_Source\PSoC5/SPI.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC5/SPI.c **** *
 717:Generated_Source\PSoC5/SPI.c **** * Global variables:
 718:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC5/SPI.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC5/SPI.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC5/SPI.c **** *
 723:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 724:Generated_Source\PSoC5/SPI.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC5/SPI.c **** *
 726:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 727:Generated_Source\PSoC5/SPI.c **** uint8  SPI_GetTxBufferSize(void) 
 728:Generated_Source\PSoC5/SPI.c **** {
 379              		.loc 1 728 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 729:Generated_Source\PSoC5/SPI.c ****     uint8 size;
 730:Generated_Source\PSoC5/SPI.c **** 
 731:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC5/SPI.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC5/SPI.c ****         SPI_DisableTxInt();
 734:Generated_Source\PSoC5/SPI.c **** 
 735:Generated_Source\PSoC5/SPI.c ****         if(SPI_txBufferRead == SPI_txBufferWrite)
 736:Generated_Source\PSoC5/SPI.c ****         {
 737:Generated_Source\PSoC5/SPI.c ****             size = 0u;
 738:Generated_Source\PSoC5/SPI.c ****         }
 739:Generated_Source\PSoC5/SPI.c ****         else if(SPI_txBufferRead < SPI_txBufferWrite)
 740:Generated_Source\PSoC5/SPI.c ****         {
 741:Generated_Source\PSoC5/SPI.c ****             size = (SPI_txBufferWrite - SPI_txBufferRead);
 742:Generated_Source\PSoC5/SPI.c ****         }
 743:Generated_Source\PSoC5/SPI.c ****         else
 744:Generated_Source\PSoC5/SPI.c ****         {
 745:Generated_Source\PSoC5/SPI.c ****             size = (SPI_TX_BUFFER_SIZE - SPI_txBufferRead) + SPI_txBufferWrite;
 746:Generated_Source\PSoC5/SPI.c ****         }
 747:Generated_Source\PSoC5/SPI.c **** 
 748:Generated_Source\PSoC5/SPI.c ****         SPI_EnableTxInt();
 749:Generated_Source\PSoC5/SPI.c **** 
 750:Generated_Source\PSoC5/SPI.c ****     #else
 751:Generated_Source\PSoC5/SPI.c **** 
 752:Generated_Source\PSoC5/SPI.c ****         size = SPI_TX_STATUS_REG;
 384              		.loc 1 752 0
 385 0000 074B     		ldr	r3, .L41
 386 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 387 0004 DBB2     		uxtb	r3, r3
 388              	.LVL13:
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 21


 753:Generated_Source\PSoC5/SPI.c **** 
 754:Generated_Source\PSoC5/SPI.c ****         if(0u != (size & SPI_STS_TX_FIFO_EMPTY))
 389              		.loc 1 754 0
 390 0006 13F0020F 		tst	r3, #2
 391 000a 04D1     		bne	.L39
 755:Generated_Source\PSoC5/SPI.c ****         {
 756:Generated_Source\PSoC5/SPI.c ****             size = 0u;
 757:Generated_Source\PSoC5/SPI.c ****         }
 758:Generated_Source\PSoC5/SPI.c ****         else if(0u != (size & SPI_STS_TX_FIFO_NOT_FULL))
 392              		.loc 1 758 0
 393 000c 13F0040F 		tst	r3, #4
 394 0010 03D0     		beq	.L40
 759:Generated_Source\PSoC5/SPI.c ****         {
 760:Generated_Source\PSoC5/SPI.c ****             size = 1u;
 395              		.loc 1 760 0
 396 0012 0120     		movs	r0, #1
 397 0014 7047     		bx	lr
 398              	.L39:
 756:Generated_Source\PSoC5/SPI.c ****         }
 399              		.loc 1 756 0
 400 0016 0020     		movs	r0, #0
 401 0018 7047     		bx	lr
 402              	.L40:
 761:Generated_Source\PSoC5/SPI.c ****         }
 762:Generated_Source\PSoC5/SPI.c ****         else
 763:Generated_Source\PSoC5/SPI.c ****         {
 764:Generated_Source\PSoC5/SPI.c ****             size = SPI_FIFO_SIZE;
 403              		.loc 1 764 0
 404 001a 0420     		movs	r0, #4
 405              	.LVL14:
 765:Generated_Source\PSoC5/SPI.c ****         }
 766:Generated_Source\PSoC5/SPI.c **** 
 767:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC5/SPI.c **** 
 769:Generated_Source\PSoC5/SPI.c ****     return(size);
 770:Generated_Source\PSoC5/SPI.c **** }
 406              		.loc 1 770 0
 407 001c 7047     		bx	lr
 408              	.L42:
 409 001e 00BF     		.align	2
 410              	.L41:
 411 0020 67640040 		.word	1073767527
 412              		.cfi_endproc
 413              	.LFE15:
 414              		.size	SPI_GetTxBufferSize, .-SPI_GetTxBufferSize
 415              		.section	.text.SPI_ClearRxBuffer,"ax",%progbits
 416              		.align	2
 417              		.global	SPI_ClearRxBuffer
 418              		.thumb
 419              		.thumb_func
 420              		.type	SPI_ClearRxBuffer, %function
 421              	SPI_ClearRxBuffer:
 422              	.LFB16:
 771:Generated_Source\PSoC5/SPI.c **** 
 772:Generated_Source\PSoC5/SPI.c **** 
 773:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 774:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ClearRxBuffer
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 22


 775:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 776:Generated_Source\PSoC5/SPI.c **** *
 777:Generated_Source\PSoC5/SPI.c **** * Summary:
 778:Generated_Source\PSoC5/SPI.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC5/SPI.c **** *
 780:Generated_Source\PSoC5/SPI.c **** * Parameters:
 781:Generated_Source\PSoC5/SPI.c **** *  None.
 782:Generated_Source\PSoC5/SPI.c **** *
 783:Generated_Source\PSoC5/SPI.c **** * Return:
 784:Generated_Source\PSoC5/SPI.c **** *  None.
 785:Generated_Source\PSoC5/SPI.c **** *
 786:Generated_Source\PSoC5/SPI.c **** * Global variables:
 787:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC5/SPI.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC5/SPI.c **** *  call - resets to zero.
 790:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC5/SPI.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC5/SPI.c **** *  resets to zero.
 793:Generated_Source\PSoC5/SPI.c **** *
 794:Generated_Source\PSoC5/SPI.c **** * Theory:
 795:Generated_Source\PSoC5/SPI.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC5/SPI.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC5/SPI.c **** *  remained in the RAM.
 798:Generated_Source\PSoC5/SPI.c **** *
 799:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 800:Generated_Source\PSoC5/SPI.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC5/SPI.c **** *
 802:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 803:Generated_Source\PSoC5/SPI.c **** *  No.
 804:Generated_Source\PSoC5/SPI.c **** *
 805:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 806:Generated_Source\PSoC5/SPI.c **** void SPI_ClearRxBuffer(void) 
 807:Generated_Source\PSoC5/SPI.c **** {
 423              		.loc 1 807 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 808:Generated_Source\PSoC5/SPI.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC5/SPI.c ****     while(0u !=(SPI_RX_STATUS_REG & SPI_STS_RX_FIFO_NOT_EMPTY))
 428              		.loc 1 809 0
 429 0000 01E0     		b	.L44
 430              	.L45:
 810:Generated_Source\PSoC5/SPI.c ****     {
 811:Generated_Source\PSoC5/SPI.c ****         (void) CY_GET_REG8(SPI_RXDATA_PTR);
 431              		.loc 1 811 0
 432 0002 044B     		ldr	r3, .L46
 433 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 434              	.L44:
 809:Generated_Source\PSoC5/SPI.c ****     {
 435              		.loc 1 809 0
 436 0006 044B     		ldr	r3, .L46+4
 437 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 438 000a 13F0200F 		tst	r3, #32
 439 000e F8D1     		bne	.L45
 812:Generated_Source\PSoC5/SPI.c ****     }
 813:Generated_Source\PSoC5/SPI.c **** 
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 23


 814:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC5/SPI.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC5/SPI.c ****         SPI_DisableRxInt();
 817:Generated_Source\PSoC5/SPI.c **** 
 818:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferFull  = 0u;
 819:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferRead  = 0u;
 820:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferWrite = 0u;
 821:Generated_Source\PSoC5/SPI.c **** 
 822:Generated_Source\PSoC5/SPI.c ****         SPI_EnableRxInt();
 823:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC5/SPI.c **** }
 440              		.loc 1 824 0
 441 0010 7047     		bx	lr
 442              	.L47:
 443 0012 00BF     		.align	2
 444              	.L46:
 445 0014 56640040 		.word	1073767510
 446 0018 66650040 		.word	1073767782
 447              		.cfi_endproc
 448              	.LFE16:
 449              		.size	SPI_ClearRxBuffer, .-SPI_ClearRxBuffer
 450              		.section	.text.SPI_ClearTxBuffer,"ax",%progbits
 451              		.align	2
 452              		.global	SPI_ClearTxBuffer
 453              		.thumb
 454              		.thumb_func
 455              		.type	SPI_ClearTxBuffer, %function
 456              	SPI_ClearTxBuffer:
 457              	.LFB17:
 825:Generated_Source\PSoC5/SPI.c **** 
 826:Generated_Source\PSoC5/SPI.c **** 
 827:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 828:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ClearTxBuffer
 829:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 830:Generated_Source\PSoC5/SPI.c **** *
 831:Generated_Source\PSoC5/SPI.c **** * Summary:
 832:Generated_Source\PSoC5/SPI.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC5/SPI.c **** *
 834:Generated_Source\PSoC5/SPI.c **** * Parameters:
 835:Generated_Source\PSoC5/SPI.c **** *  None.
 836:Generated_Source\PSoC5/SPI.c **** *
 837:Generated_Source\PSoC5/SPI.c **** * Return:
 838:Generated_Source\PSoC5/SPI.c **** *  None.
 839:Generated_Source\PSoC5/SPI.c **** *
 840:Generated_Source\PSoC5/SPI.c **** * Global variables:
 841:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC5/SPI.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC5/SPI.c **** *  call - resets to zero.
 844:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC5/SPI.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC5/SPI.c **** *  resets to zero.
 847:Generated_Source\PSoC5/SPI.c **** *
 848:Generated_Source\PSoC5/SPI.c **** * Theory:
 849:Generated_Source\PSoC5/SPI.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC5/SPI.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC5/SPI.c **** *  remained in the RAM.
 852:Generated_Source\PSoC5/SPI.c **** *
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 24


 853:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 854:Generated_Source\PSoC5/SPI.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC5/SPI.c **** *  overwritten.
 856:Generated_Source\PSoC5/SPI.c **** *
 857:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 858:Generated_Source\PSoC5/SPI.c **** *  No.
 859:Generated_Source\PSoC5/SPI.c **** *
 860:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 861:Generated_Source\PSoC5/SPI.c **** void SPI_ClearTxBuffer(void) 
 862:Generated_Source\PSoC5/SPI.c **** {
 458              		.loc 1 862 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462 0000 08B5     		push	{r3, lr}
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 3, -8
 465              		.cfi_offset 14, -4
 863:Generated_Source\PSoC5/SPI.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC5/SPI.c **** 
 865:Generated_Source\PSoC5/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 466              		.loc 1 865 0
 467 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 468              	.LVL15:
 866:Generated_Source\PSoC5/SPI.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC5/SPI.c ****     SPI_AUX_CONTROL_DP0_REG |= ((uint8)  SPI_TX_FIFO_CLR);
 469              		.loc 1 867 0
 470 0006 064B     		ldr	r3, .L50
 471 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 472 000a 42F00102 		orr	r2, r2, #1
 473 000e 1A70     		strb	r2, [r3]
 868:Generated_Source\PSoC5/SPI.c ****     SPI_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI_TX_FIFO_CLR);
 474              		.loc 1 868 0
 475 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 476 0012 02F0FE02 		and	r2, r2, #254
 477 0016 1A70     		strb	r2, [r3]
 869:Generated_Source\PSoC5/SPI.c **** 
 870:Generated_Source\PSoC5/SPI.c ****     #if(SPI_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC5/SPI.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC5/SPI.c ****         SPI_AUX_CONTROL_DP1_REG |= ((uint8)  SPI_TX_FIFO_CLR);
 873:Generated_Source\PSoC5/SPI.c ****         SPI_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI_TX_FIFO_CLR);
 874:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC5/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 478              		.loc 1 875 0
 479 0018 FFF7FEFF 		bl	CyExitCriticalSection
 480              	.LVL16:
 481 001c 08BD     		pop	{r3, pc}
 482              	.L51:
 483 001e 00BF     		.align	2
 484              	.L50:
 485 0020 96640040 		.word	1073767574
 486              		.cfi_endproc
 487              	.LFE17:
 488              		.size	SPI_ClearTxBuffer, .-SPI_ClearTxBuffer
 489              		.section	.text.SPI_PutArray,"ax",%progbits
 490              		.align	2
 491              		.global	SPI_PutArray
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 25


 492              		.thumb
 493              		.thumb_func
 494              		.type	SPI_PutArray, %function
 495              	SPI_PutArray:
 496              	.LFB18:
 876:Generated_Source\PSoC5/SPI.c **** 
 877:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC5/SPI.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC5/SPI.c ****         SPI_DisableTxInt();
 880:Generated_Source\PSoC5/SPI.c **** 
 881:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferFull  = 0u;
 882:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferRead  = 0u;
 883:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferWrite = 0u;
 884:Generated_Source\PSoC5/SPI.c **** 
 885:Generated_Source\PSoC5/SPI.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC5/SPI.c ****         SPI_TX_STATUS_MASK_REG &= ((uint8) ~SPI_STS_TX_FIFO_NOT_FULL);
 887:Generated_Source\PSoC5/SPI.c **** 
 888:Generated_Source\PSoC5/SPI.c ****         SPI_EnableTxInt();
 889:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC5/SPI.c **** }
 891:Generated_Source\PSoC5/SPI.c **** 
 892:Generated_Source\PSoC5/SPI.c **** 
 893:Generated_Source\PSoC5/SPI.c **** #if(0u != SPI_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC5/SPI.c ****     /*******************************************************************************
 895:Generated_Source\PSoC5/SPI.c ****     * Function Name: SPI_TxEnable
 896:Generated_Source\PSoC5/SPI.c ****     ********************************************************************************
 897:Generated_Source\PSoC5/SPI.c ****     *
 898:Generated_Source\PSoC5/SPI.c ****     * Summary:
 899:Generated_Source\PSoC5/SPI.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC5/SPI.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC5/SPI.c ****     *
 902:Generated_Source\PSoC5/SPI.c ****     * Parameters:
 903:Generated_Source\PSoC5/SPI.c ****     *  None.
 904:Generated_Source\PSoC5/SPI.c ****     *
 905:Generated_Source\PSoC5/SPI.c ****     * Return:
 906:Generated_Source\PSoC5/SPI.c ****     *  None.
 907:Generated_Source\PSoC5/SPI.c ****     *
 908:Generated_Source\PSoC5/SPI.c ****     *******************************************************************************/
 909:Generated_Source\PSoC5/SPI.c ****     void SPI_TxEnable(void) 
 910:Generated_Source\PSoC5/SPI.c ****     {
 911:Generated_Source\PSoC5/SPI.c ****         SPI_CONTROL_REG |= SPI_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC5/SPI.c ****     }
 913:Generated_Source\PSoC5/SPI.c **** 
 914:Generated_Source\PSoC5/SPI.c **** 
 915:Generated_Source\PSoC5/SPI.c ****     /*******************************************************************************
 916:Generated_Source\PSoC5/SPI.c ****     * Function Name: SPI_TxDisable
 917:Generated_Source\PSoC5/SPI.c ****     ********************************************************************************
 918:Generated_Source\PSoC5/SPI.c ****     *
 919:Generated_Source\PSoC5/SPI.c ****     * Summary:
 920:Generated_Source\PSoC5/SPI.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC5/SPI.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC5/SPI.c ****     *
 923:Generated_Source\PSoC5/SPI.c ****     * Parameters:
 924:Generated_Source\PSoC5/SPI.c ****     *  None.
 925:Generated_Source\PSoC5/SPI.c ****     *
 926:Generated_Source\PSoC5/SPI.c ****     * Return:
 927:Generated_Source\PSoC5/SPI.c ****     *  None.
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 26


 928:Generated_Source\PSoC5/SPI.c ****     *
 929:Generated_Source\PSoC5/SPI.c ****     *******************************************************************************/
 930:Generated_Source\PSoC5/SPI.c ****     void SPI_TxDisable(void) 
 931:Generated_Source\PSoC5/SPI.c ****     {
 932:Generated_Source\PSoC5/SPI.c ****         SPI_CONTROL_REG &= ((uint8) ~SPI_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC5/SPI.c ****     }
 934:Generated_Source\PSoC5/SPI.c **** 
 935:Generated_Source\PSoC5/SPI.c **** #endif /* (0u != SPI_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC5/SPI.c **** 
 937:Generated_Source\PSoC5/SPI.c **** 
 938:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 939:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_PutArray
 940:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 941:Generated_Source\PSoC5/SPI.c **** *
 942:Generated_Source\PSoC5/SPI.c **** * Summary:
 943:Generated_Source\PSoC5/SPI.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC5/SPI.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC5/SPI.c **** *
 946:Generated_Source\PSoC5/SPI.c **** * Parameters:
 947:Generated_Source\PSoC5/SPI.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC5/SPI.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC5/SPI.c **** *
 950:Generated_Source\PSoC5/SPI.c **** * Return:
 951:Generated_Source\PSoC5/SPI.c **** *  None.
 952:Generated_Source\PSoC5/SPI.c **** *
 953:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 954:Generated_Source\PSoC5/SPI.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC5/SPI.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC5/SPI.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC5/SPI.c **** *
 958:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 959:Generated_Source\PSoC5/SPI.c **** *  No.
 960:Generated_Source\PSoC5/SPI.c **** *
 961:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 962:Generated_Source\PSoC5/SPI.c **** void SPI_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC5/SPI.c ****                                                                           
 964:Generated_Source\PSoC5/SPI.c **** {
 497              		.loc 1 964 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              	.LVL17:
 502 0000 70B5     		push	{r4, r5, r6, lr}
 503              		.cfi_def_cfa_offset 16
 504              		.cfi_offset 4, -16
 505              		.cfi_offset 5, -12
 506              		.cfi_offset 6, -8
 507              		.cfi_offset 14, -4
 508 0002 0646     		mov	r6, r0
 509 0004 0C46     		mov	r4, r1
 510              	.LVL18:
 965:Generated_Source\PSoC5/SPI.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC5/SPI.c **** 
 967:Generated_Source\PSoC5/SPI.c ****     bufIndex = 0u;
 511              		.loc 1 967 0
 512 0006 0025     		movs	r5, #0
 968:Generated_Source\PSoC5/SPI.c **** 
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 27


 969:Generated_Source\PSoC5/SPI.c ****     while(byteCount > 0u)
 513              		.loc 1 969 0
 514 0008 06E0     		b	.L53
 515              	.LVL19:
 516              	.L54:
 970:Generated_Source\PSoC5/SPI.c ****     {
 971:Generated_Source\PSoC5/SPI.c ****         SPI_WriteTxData(buffer[bufIndex]);
 517              		.loc 1 971 0
 518 000a 705D     		ldrb	r0, [r6, r5]	@ zero_extendqisi2
 519 000c FFF7FEFF 		bl	SPI_WriteTxData
 520              	.LVL20:
 972:Generated_Source\PSoC5/SPI.c ****         bufIndex++;
 521              		.loc 1 972 0
 522 0010 0135     		adds	r5, r5, #1
 523              	.LVL21:
 524 0012 EDB2     		uxtb	r5, r5
 525              	.LVL22:
 973:Generated_Source\PSoC5/SPI.c ****         byteCount--;
 526              		.loc 1 973 0
 527 0014 013C     		subs	r4, r4, #1
 528              	.LVL23:
 529 0016 E4B2     		uxtb	r4, r4
 530              	.LVL24:
 531              	.L53:
 969:Generated_Source\PSoC5/SPI.c ****     {
 532              		.loc 1 969 0
 533 0018 002C     		cmp	r4, #0
 534 001a F6D1     		bne	.L54
 974:Generated_Source\PSoC5/SPI.c ****     }
 975:Generated_Source\PSoC5/SPI.c **** }
 535              		.loc 1 975 0
 536 001c 70BD     		pop	{r4, r5, r6, pc}
 537              		.cfi_endproc
 538              	.LFE18:
 539              		.size	SPI_PutArray, .-SPI_PutArray
 540 001e 00BF     		.section	.text.SPI_ClearFIFO,"ax",%progbits
 541              		.align	2
 542              		.global	SPI_ClearFIFO
 543              		.thumb
 544              		.thumb_func
 545              		.type	SPI_ClearFIFO, %function
 546              	SPI_ClearFIFO:
 547              	.LFB19:
 976:Generated_Source\PSoC5/SPI.c **** 
 977:Generated_Source\PSoC5/SPI.c **** 
 978:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 979:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ClearFIFO
 980:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 981:Generated_Source\PSoC5/SPI.c **** *
 982:Generated_Source\PSoC5/SPI.c **** * Summary:
 983:Generated_Source\PSoC5/SPI.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC5/SPI.c **** *
 985:Generated_Source\PSoC5/SPI.c **** * Parameters:
 986:Generated_Source\PSoC5/SPI.c **** *  None.
 987:Generated_Source\PSoC5/SPI.c **** *
 988:Generated_Source\PSoC5/SPI.c **** * Return:
 989:Generated_Source\PSoC5/SPI.c **** *  None.
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 28


 990:Generated_Source\PSoC5/SPI.c **** *
 991:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 992:Generated_Source\PSoC5/SPI.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC5/SPI.c **** *
 994:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 995:Generated_Source\PSoC5/SPI.c **** void SPI_ClearFIFO(void) 
 996:Generated_Source\PSoC5/SPI.c **** {
 548              		.loc 1 996 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552 0000 08B5     		push	{r3, lr}
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 3, -8
 555              		.cfi_offset 14, -4
 997:Generated_Source\PSoC5/SPI.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC5/SPI.c **** 
 999:Generated_Source\PSoC5/SPI.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC5/SPI.c ****     while(0u !=(SPI_RX_STATUS_REG & SPI_STS_RX_FIFO_NOT_EMPTY))
 556              		.loc 1 1000 0
 557 0002 01E0     		b	.L57
 558              	.L58:
1001:Generated_Source\PSoC5/SPI.c ****     {
1002:Generated_Source\PSoC5/SPI.c ****         (void) CY_GET_REG8(SPI_RXDATA_PTR);
 559              		.loc 1 1002 0
 560 0004 0A4B     		ldr	r3, .L60
 561 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 562              	.L57:
1000:Generated_Source\PSoC5/SPI.c ****     {
 563              		.loc 1 1000 0
 564 0008 0A4B     		ldr	r3, .L60+4
 565 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 566 000c 13F0200F 		tst	r3, #32
 567 0010 F8D1     		bne	.L58
1003:Generated_Source\PSoC5/SPI.c ****     }
1004:Generated_Source\PSoC5/SPI.c **** 
1005:Generated_Source\PSoC5/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 568              		.loc 1 1005 0
 569 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 570              	.LVL25:
1006:Generated_Source\PSoC5/SPI.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC5/SPI.c ****     SPI_AUX_CONTROL_DP0_REG |= ((uint8)  SPI_TX_FIFO_CLR);
 571              		.loc 1 1007 0
 572 0016 084B     		ldr	r3, .L60+8
 573 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 574 001a 42F00102 		orr	r2, r2, #1
 575 001e 1A70     		strb	r2, [r3]
1008:Generated_Source\PSoC5/SPI.c ****     SPI_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI_TX_FIFO_CLR);
 576              		.loc 1 1008 0
 577 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 578 0022 02F0FE02 		and	r2, r2, #254
 579 0026 1A70     		strb	r2, [r3]
1009:Generated_Source\PSoC5/SPI.c **** 
1010:Generated_Source\PSoC5/SPI.c ****     #if(SPI_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC5/SPI.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC5/SPI.c ****         SPI_AUX_CONTROL_DP1_REG |= ((uint8)  SPI_TX_FIFO_CLR);
1013:Generated_Source\PSoC5/SPI.c ****         SPI_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI_TX_FIFO_CLR);
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 29


1014:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC5/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 580              		.loc 1 1015 0
 581 0028 FFF7FEFF 		bl	CyExitCriticalSection
 582              	.LVL26:
 583 002c 08BD     		pop	{r3, pc}
 584              	.L61:
 585 002e 00BF     		.align	2
 586              	.L60:
 587 0030 56640040 		.word	1073767510
 588 0034 66650040 		.word	1073767782
 589 0038 96640040 		.word	1073767574
 590              		.cfi_endproc
 591              	.LFE19:
 592              		.size	SPI_ClearFIFO, .-SPI_ClearFIFO
 593              		.section	.text.SPI_Init,"ax",%progbits
 594              		.align	2
 595              		.global	SPI_Init
 596              		.thumb
 597              		.thumb_func
 598              		.type	SPI_Init, %function
 599              	SPI_Init:
 600              	.LFB0:
  64:Generated_Source\PSoC5/SPI.c ****     /* Initialize the Bit counter */
 601              		.loc 1 64 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605 0000 08B5     		push	{r3, lr}
 606              		.cfi_def_cfa_offset 8
 607              		.cfi_offset 3, -8
 608              		.cfi_offset 14, -4
  66:Generated_Source\PSoC5/SPI.c **** 
 609              		.loc 1 66 0
 610 0002 0F22     		movs	r2, #15
 611 0004 064B     		ldr	r3, .L64
 612 0006 1A70     		strb	r2, [r3]
  83:Generated_Source\PSoC5/SPI.c **** 
 613              		.loc 1 83 0
 614 0008 FFF7FEFF 		bl	SPI_ClearFIFO
 615              	.LVL27:
  97:Generated_Source\PSoC5/SPI.c ****     (void) SPI_ReadRxStatus(); /* Clear Rx status and swStatusRx */
 616              		.loc 1 97 0
 617 000c FFF7FEFF 		bl	SPI_ReadTxStatus
 618              	.LVL28:
  98:Generated_Source\PSoC5/SPI.c **** 
 619              		.loc 1 98 0
 620 0010 FFF7FEFF 		bl	SPI_ReadRxStatus
 621              	.LVL29:
 101:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_MASK_REG = SPI_RX_INIT_INTERRUPTS_MASK;
 622              		.loc 1 101 0
 623 0014 0023     		movs	r3, #0
 624 0016 034A     		ldr	r2, .L64+4
 625 0018 1370     		strb	r3, [r2]
 102:Generated_Source\PSoC5/SPI.c **** }
 626              		.loc 1 102 0
 627 001a FF32     		adds	r2, r2, #255
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 30


 628 001c 1370     		strb	r3, [r2]
 629 001e 08BD     		pop	{r3, pc}
 630              	.L65:
 631              		.align	2
 632              	.L64:
 633 0020 86640040 		.word	1073767558
 634 0024 87640040 		.word	1073767559
 635              		.cfi_endproc
 636              	.LFE0:
 637              		.size	SPI_Init, .-SPI_Init
 638              		.section	.text.SPI_Start,"ax",%progbits
 639              		.align	2
 640              		.global	SPI_Start
 641              		.thumb
 642              		.thumb_func
 643              		.type	SPI_Start, %function
 644              	SPI_Start:
 645              	.LFB2:
 164:Generated_Source\PSoC5/SPI.c ****     if(0u == SPI_initVar)
 646              		.loc 1 164 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650 0000 08B5     		push	{r3, lr}
 651              		.cfi_def_cfa_offset 8
 652              		.cfi_offset 3, -8
 653              		.cfi_offset 14, -4
 165:Generated_Source\PSoC5/SPI.c ****     {
 654              		.loc 1 165 0
 655 0002 054B     		ldr	r3, .L69
 656 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 657 0006 23B9     		cbnz	r3, .L67
 167:Generated_Source\PSoC5/SPI.c ****         SPI_initVar = 1u;
 658              		.loc 1 167 0
 659 0008 FFF7FEFF 		bl	SPI_Init
 660              	.LVL30:
 168:Generated_Source\PSoC5/SPI.c ****     }
 661              		.loc 1 168 0
 662 000c 0122     		movs	r2, #1
 663 000e 024B     		ldr	r3, .L69
 664 0010 1A70     		strb	r2, [r3]
 665              	.L67:
 171:Generated_Source\PSoC5/SPI.c **** }
 666              		.loc 1 171 0
 667 0012 FFF7FEFF 		bl	SPI_Enable
 668              	.LVL31:
 669 0016 08BD     		pop	{r3, pc}
 670              	.L70:
 671              		.align	2
 672              	.L69:
 673 0018 00000000 		.word	.LANCHOR0
 674              		.cfi_endproc
 675              	.LFE2:
 676              		.size	SPI_Start, .-SPI_Start
 677              		.section	.text.SPI_EnableInt,"ax",%progbits
 678              		.align	2
 679              		.global	SPI_EnableInt
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 31


 680              		.thumb
 681              		.thumb_func
 682              		.type	SPI_EnableInt, %function
 683              	SPI_EnableInt:
 684              	.LFB20:
1016:Generated_Source\PSoC5/SPI.c **** }
1017:Generated_Source\PSoC5/SPI.c **** 
1018:Generated_Source\PSoC5/SPI.c **** 
1019:Generated_Source\PSoC5/SPI.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC5/SPI.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC5/SPI.c **** */
1022:Generated_Source\PSoC5/SPI.c **** 
1023:Generated_Source\PSoC5/SPI.c **** 
1024:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
1025:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_EnableInt
1026:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
1027:Generated_Source\PSoC5/SPI.c **** *
1028:Generated_Source\PSoC5/SPI.c **** * Summary:
1029:Generated_Source\PSoC5/SPI.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC5/SPI.c **** *
1031:Generated_Source\PSoC5/SPI.c **** * Parameters:
1032:Generated_Source\PSoC5/SPI.c **** *  None.
1033:Generated_Source\PSoC5/SPI.c **** *
1034:Generated_Source\PSoC5/SPI.c **** * Return:
1035:Generated_Source\PSoC5/SPI.c **** *  None.
1036:Generated_Source\PSoC5/SPI.c **** *
1037:Generated_Source\PSoC5/SPI.c **** * Theory:
1038:Generated_Source\PSoC5/SPI.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC5/SPI.c **** *
1040:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
1041:Generated_Source\PSoC5/SPI.c **** void SPI_EnableInt(void) 
1042:Generated_Source\PSoC5/SPI.c **** {
 685              		.loc 1 1042 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689              		@ link register save eliminated.
 690 0000 7047     		bx	lr
 691              		.cfi_endproc
 692              	.LFE20:
 693              		.size	SPI_EnableInt, .-SPI_EnableInt
 694 0002 00BF     		.section	.text.SPI_DisableInt,"ax",%progbits
 695              		.align	2
 696              		.global	SPI_DisableInt
 697              		.thumb
 698              		.thumb_func
 699              		.type	SPI_DisableInt, %function
 700              	SPI_DisableInt:
 701              	.LFB21:
1043:Generated_Source\PSoC5/SPI.c ****     SPI_EnableRxInt();
1044:Generated_Source\PSoC5/SPI.c ****     SPI_EnableTxInt();
1045:Generated_Source\PSoC5/SPI.c **** }
1046:Generated_Source\PSoC5/SPI.c **** 
1047:Generated_Source\PSoC5/SPI.c **** 
1048:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
1049:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_DisableInt
1050:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 32


1051:Generated_Source\PSoC5/SPI.c **** *
1052:Generated_Source\PSoC5/SPI.c **** * Summary:
1053:Generated_Source\PSoC5/SPI.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC5/SPI.c **** *
1055:Generated_Source\PSoC5/SPI.c **** * Parameters:
1056:Generated_Source\PSoC5/SPI.c **** *  None.
1057:Generated_Source\PSoC5/SPI.c **** *
1058:Generated_Source\PSoC5/SPI.c **** * Return:
1059:Generated_Source\PSoC5/SPI.c **** *  None.
1060:Generated_Source\PSoC5/SPI.c **** *
1061:Generated_Source\PSoC5/SPI.c **** * Theory:
1062:Generated_Source\PSoC5/SPI.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC5/SPI.c **** *
1064:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
1065:Generated_Source\PSoC5/SPI.c **** void SPI_DisableInt(void) 
1066:Generated_Source\PSoC5/SPI.c **** {
 702              		.loc 1 1066 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707 0000 7047     		bx	lr
 708              		.cfi_endproc
 709              	.LFE21:
 710              		.size	SPI_DisableInt, .-SPI_DisableInt
 711 0002 00BF     		.section	.text.SPI_SetInterruptMode,"ax",%progbits
 712              		.align	2
 713              		.global	SPI_SetInterruptMode
 714              		.thumb
 715              		.thumb_func
 716              		.type	SPI_SetInterruptMode, %function
 717              	SPI_SetInterruptMode:
 718              	.LFB22:
1067:Generated_Source\PSoC5/SPI.c ****     SPI_DisableTxInt();
1068:Generated_Source\PSoC5/SPI.c ****     SPI_DisableRxInt();
1069:Generated_Source\PSoC5/SPI.c **** }
1070:Generated_Source\PSoC5/SPI.c **** 
1071:Generated_Source\PSoC5/SPI.c **** 
1072:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
1073:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_SetInterruptMode
1074:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
1075:Generated_Source\PSoC5/SPI.c **** *
1076:Generated_Source\PSoC5/SPI.c **** * Summary:
1077:Generated_Source\PSoC5/SPI.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC5/SPI.c **** *
1079:Generated_Source\PSoC5/SPI.c **** * Parameters:
1080:Generated_Source\PSoC5/SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC5/SPI.c **** *  header file).
1082:Generated_Source\PSoC5/SPI.c **** *
1083:Generated_Source\PSoC5/SPI.c **** * Return:
1084:Generated_Source\PSoC5/SPI.c **** *  None.
1085:Generated_Source\PSoC5/SPI.c **** *
1086:Generated_Source\PSoC5/SPI.c **** * Theory:
1087:Generated_Source\PSoC5/SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC5/SPI.c **** *
1089:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
1090:Generated_Source\PSoC5/SPI.c **** void SPI_SetInterruptMode(uint8 intSrc) 
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 33


1091:Generated_Source\PSoC5/SPI.c **** {
 719              		.loc 1 1091 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              		@ link register save eliminated.
 724              	.LVL32:
1092:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPI_STS_SPI_IDLE));
 725              		.loc 1 1092 0
 726 0000 00F0EF02 		and	r2, r0, #239
 727 0004 024B     		ldr	r3, .L74
 728 0006 1A70     		strb	r2, [r3]
1093:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_MASK_REG  =  intSrc;
 729              		.loc 1 1093 0
 730 0008 FF33     		adds	r3, r3, #255
 731 000a 1870     		strb	r0, [r3]
 732 000c 7047     		bx	lr
 733              	.L75:
 734 000e 00BF     		.align	2
 735              	.L74:
 736 0010 87640040 		.word	1073767559
 737              		.cfi_endproc
 738              	.LFE22:
 739              		.size	SPI_SetInterruptMode, .-SPI_SetInterruptMode
 740              		.section	.text.SPI_ReadStatus,"ax",%progbits
 741              		.align	2
 742              		.global	SPI_ReadStatus
 743              		.thumb
 744              		.thumb_func
 745              		.type	SPI_ReadStatus, %function
 746              	SPI_ReadStatus:
 747              	.LFB23:
1094:Generated_Source\PSoC5/SPI.c **** }
1095:Generated_Source\PSoC5/SPI.c **** 
1096:Generated_Source\PSoC5/SPI.c **** 
1097:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
1098:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ReadStatus
1099:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
1100:Generated_Source\PSoC5/SPI.c **** *
1101:Generated_Source\PSoC5/SPI.c **** * Summary:
1102:Generated_Source\PSoC5/SPI.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC5/SPI.c **** *
1104:Generated_Source\PSoC5/SPI.c **** * Parameters:
1105:Generated_Source\PSoC5/SPI.c **** *  None.
1106:Generated_Source\PSoC5/SPI.c **** *
1107:Generated_Source\PSoC5/SPI.c **** * Return:
1108:Generated_Source\PSoC5/SPI.c **** *  Contents of the status register.
1109:Generated_Source\PSoC5/SPI.c **** *
1110:Generated_Source\PSoC5/SPI.c **** * Global variables:
1111:Generated_Source\PSoC5/SPI.c **** *  SPI_swStatus - used to store in software status register,
1112:Generated_Source\PSoC5/SPI.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC5/SPI.c **** *
1114:Generated_Source\PSoC5/SPI.c **** * Theory:
1115:Generated_Source\PSoC5/SPI.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC5/SPI.c **** *  and flow control.
1117:Generated_Source\PSoC5/SPI.c **** *
1118:Generated_Source\PSoC5/SPI.c **** * Side Effects:
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 34


1119:Generated_Source\PSoC5/SPI.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC5/SPI.c **** *
1121:Generated_Source\PSoC5/SPI.c **** * Reentrant:
1122:Generated_Source\PSoC5/SPI.c **** *  No.
1123:Generated_Source\PSoC5/SPI.c **** *
1124:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
1125:Generated_Source\PSoC5/SPI.c **** uint8 SPI_ReadStatus(void) 
1126:Generated_Source\PSoC5/SPI.c **** {
 748              		.loc 1 1126 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		@ link register save eliminated.
1127:Generated_Source\PSoC5/SPI.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC5/SPI.c **** 
1129:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED || SPI_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC5/SPI.c **** 
1131:Generated_Source\PSoC5/SPI.c ****         SPI_DisableInt();
1132:Generated_Source\PSoC5/SPI.c **** 
1133:Generated_Source\PSoC5/SPI.c ****         tmpStatus  = SPI_GET_STATUS_RX(SPI_swStatusRx);
1134:Generated_Source\PSoC5/SPI.c ****         tmpStatus |= SPI_GET_STATUS_TX(SPI_swStatusTx);
1135:Generated_Source\PSoC5/SPI.c ****         tmpStatus &= ((uint8) ~SPI_STS_SPI_IDLE);
1136:Generated_Source\PSoC5/SPI.c **** 
1137:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusTx = 0u;
1138:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusRx = 0u;
1139:Generated_Source\PSoC5/SPI.c **** 
1140:Generated_Source\PSoC5/SPI.c ****         SPI_EnableInt();
1141:Generated_Source\PSoC5/SPI.c **** 
1142:Generated_Source\PSoC5/SPI.c ****     #else
1143:Generated_Source\PSoC5/SPI.c **** 
1144:Generated_Source\PSoC5/SPI.c ****         tmpStatus  = SPI_RX_STATUS_REG;
 753              		.loc 1 1144 0
 754 0000 034B     		ldr	r3, .L77
 755 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 756              	.LVL33:
1145:Generated_Source\PSoC5/SPI.c ****         tmpStatus |= SPI_TX_STATUS_REG;
 757              		.loc 1 1145 0
 758 0004 034A     		ldr	r2, .L77+4
 759 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 760 0008 1843     		orrs	r0, r0, r3
 761              	.LVL34:
1146:Generated_Source\PSoC5/SPI.c ****         tmpStatus &= ((uint8) ~SPI_STS_SPI_IDLE);
1147:Generated_Source\PSoC5/SPI.c **** 
1148:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED || SPI_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC5/SPI.c **** 
1150:Generated_Source\PSoC5/SPI.c ****     return(tmpStatus);
1151:Generated_Source\PSoC5/SPI.c **** }
 762              		.loc 1 1151 0
 763 000a 00F0EF00 		and	r0, r0, #239
 764              	.LVL35:
 765 000e 7047     		bx	lr
 766              	.L78:
 767              		.align	2
 768              	.L77:
 769 0010 66650040 		.word	1073767782
 770 0014 67640040 		.word	1073767527
 771              		.cfi_endproc
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 35


 772              	.LFE23:
 773              		.size	SPI_ReadStatus, .-SPI_ReadStatus
 774              		.comm	SPI_swStatusRx,1,1
 775              		.comm	SPI_swStatusTx,1,1
 776              		.global	SPI_initVar
 777              		.bss
 778              		.set	.LANCHOR0,. + 0
 779              		.type	SPI_initVar, %object
 780              		.size	SPI_initVar, 1
 781              	SPI_initVar:
 782 0000 00       		.space	1
 783              		.text
 784              	.Letext0:
 785              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 786              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 787              		.file 4 "Generated_Source\\PSoC5\\SPI_IntClock.h"
 788              		.section	.debug_info,"",%progbits
 789              	.Ldebug_info0:
 790 0000 B7040000 		.4byte	0x4b7
 791 0004 0400     		.2byte	0x4
 792 0006 00000000 		.4byte	.Ldebug_abbrev0
 793 000a 04       		.byte	0x4
 794 000b 01       		.uleb128 0x1
 795 000c CE000000 		.4byte	.LASF56
 796 0010 0C       		.byte	0xc
 797 0011 15030000 		.4byte	.LASF57
 798 0015 AC030000 		.4byte	.LASF58
 799 0019 00000000 		.4byte	.Ldebug_ranges0+0
 800 001d 00000000 		.4byte	0
 801 0021 00000000 		.4byte	.Ldebug_line0
 802 0025 02       		.uleb128 0x2
 803 0026 01       		.byte	0x1
 804 0027 06       		.byte	0x6
 805 0028 66030000 		.4byte	.LASF0
 806 002c 02       		.uleb128 0x2
 807 002d 01       		.byte	0x1
 808 002e 08       		.byte	0x8
 809 002f B5010000 		.4byte	.LASF1
 810 0033 02       		.uleb128 0x2
 811 0034 02       		.byte	0x2
 812 0035 05       		.byte	0x5
 813 0036 F3020000 		.4byte	.LASF2
 814 003a 02       		.uleb128 0x2
 815 003b 02       		.byte	0x2
 816 003c 07       		.byte	0x7
 817 003d 39000000 		.4byte	.LASF3
 818 0041 02       		.uleb128 0x2
 819 0042 04       		.byte	0x4
 820 0043 05       		.byte	0x5
 821 0044 32030000 		.4byte	.LASF4
 822 0048 02       		.uleb128 0x2
 823 0049 04       		.byte	0x4
 824 004a 07       		.byte	0x7
 825 004b 72010000 		.4byte	.LASF5
 826 004f 02       		.uleb128 0x2
 827 0050 08       		.byte	0x8
 828 0051 05       		.byte	0x5
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 36


 829 0052 C6020000 		.4byte	.LASF6
 830 0056 02       		.uleb128 0x2
 831 0057 08       		.byte	0x8
 832 0058 07       		.byte	0x7
 833 0059 B2000000 		.4byte	.LASF7
 834 005d 03       		.uleb128 0x3
 835 005e 04       		.byte	0x4
 836 005f 05       		.byte	0x5
 837 0060 696E7400 		.ascii	"int\000"
 838 0064 02       		.uleb128 0x2
 839 0065 04       		.byte	0x4
 840 0066 07       		.byte	0x7
 841 0067 3D020000 		.4byte	.LASF8
 842 006b 04       		.uleb128 0x4
 843 006c 84010000 		.4byte	.LASF12
 844 0070 02       		.byte	0x2
 845 0071 E401     		.2byte	0x1e4
 846 0073 2C000000 		.4byte	0x2c
 847 0077 02       		.uleb128 0x2
 848 0078 04       		.byte	0x4
 849 0079 04       		.byte	0x4
 850 007a 9E000000 		.4byte	.LASF9
 851 007e 02       		.uleb128 0x2
 852 007f 08       		.byte	0x8
 853 0080 04       		.byte	0x4
 854 0081 C3010000 		.4byte	.LASF10
 855 0085 02       		.uleb128 0x2
 856 0086 01       		.byte	0x1
 857 0087 08       		.byte	0x8
 858 0088 D4020000 		.4byte	.LASF11
 859 008c 04       		.uleb128 0x4
 860 008d 5C010000 		.4byte	.LASF13
 861 0091 02       		.byte	0x2
 862 0092 8E02     		.2byte	0x28e
 863 0094 98000000 		.4byte	0x98
 864 0098 05       		.uleb128 0x5
 865 0099 6B000000 		.4byte	0x6b
 866 009d 02       		.uleb128 0x2
 867 009e 08       		.byte	0x8
 868 009f 04       		.byte	0x4
 869 00a0 5A030000 		.4byte	.LASF14
 870 00a4 02       		.uleb128 0x2
 871 00a5 04       		.byte	0x4
 872 00a6 07       		.byte	0x7
 873 00a7 AC020000 		.4byte	.LASF15
 874 00ab 06       		.uleb128 0x6
 875 00ac D9020000 		.4byte	.LASF16
 876 00b0 01       		.byte	0x1
 877 00b1 78       		.byte	0x78
 878 00b2 00000000 		.4byte	.LFB1
 879 00b6 34000000 		.4byte	.LFE1-.LFB1
 880 00ba 01       		.uleb128 0x1
 881 00bb 9C       		.byte	0x9c
 882 00bc EB000000 		.4byte	0xeb
 883 00c0 07       		.uleb128 0x7
 884 00c1 B5020000 		.4byte	.LASF18
 885 00c5 01       		.byte	0x1
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 37


 886 00c6 7A       		.byte	0x7a
 887 00c7 6B000000 		.4byte	0x6b
 888 00cb 00000000 		.4byte	.LLST0
 889 00cf 08       		.uleb128 0x8
 890 00d0 06000000 		.4byte	.LVL0
 891 00d4 8E040000 		.4byte	0x48e
 892 00d8 08       		.uleb128 0x8
 893 00d9 28000000 		.4byte	.LVL1
 894 00dd 99040000 		.4byte	0x499
 895 00e1 08       		.uleb128 0x8
 896 00e2 2C000000 		.4byte	.LVL2
 897 00e6 A4040000 		.4byte	0x4a4
 898 00ea 00       		.byte	0
 899 00eb 06       		.uleb128 0x6
 900 00ec 09020000 		.4byte	.LASF17
 901 00f0 01       		.byte	0x1
 902 00f1 C0       		.byte	0xc0
 903 00f2 00000000 		.4byte	.LFB3
 904 00f6 28000000 		.4byte	.LFE3-.LFB3
 905 00fa 01       		.uleb128 0x1
 906 00fb 9C       		.byte	0x9c
 907 00fc 2B010000 		.4byte	0x12b
 908 0100 07       		.uleb128 0x7
 909 0101 B5020000 		.4byte	.LASF18
 910 0105 01       		.byte	0x1
 911 0106 C2       		.byte	0xc2
 912 0107 6B000000 		.4byte	0x6b
 913 010b 13000000 		.4byte	.LLST1
 914 010f 08       		.uleb128 0x8
 915 0110 06000000 		.4byte	.LVL3
 916 0114 8E040000 		.4byte	0x48e
 917 0118 08       		.uleb128 0x8
 918 0119 1E000000 		.4byte	.LVL4
 919 011d 99040000 		.4byte	0x499
 920 0121 08       		.uleb128 0x8
 921 0122 22000000 		.4byte	.LVL5
 922 0126 AF040000 		.4byte	0x4af
 923 012a 00       		.byte	0
 924 012b 09       		.uleb128 0x9
 925 012c A5010000 		.4byte	.LASF19
 926 0130 01       		.byte	0x1
 927 0131 E3       		.byte	0xe3
 928 0132 00000000 		.4byte	.LFB4
 929 0136 02000000 		.4byte	.LFE4-.LFB4
 930 013a 01       		.uleb128 0x1
 931 013b 9C       		.byte	0x9c
 932 013c 09       		.uleb128 0x9
 933 013d 81030000 		.4byte	.LASF20
 934 0141 01       		.byte	0x1
 935 0142 FC       		.byte	0xfc
 936 0143 00000000 		.4byte	.LFB5
 937 0147 02000000 		.4byte	.LFE5-.LFB5
 938 014b 01       		.uleb128 0x1
 939 014c 9C       		.byte	0x9c
 940 014d 0A       		.uleb128 0xa
 941 014e 04030000 		.4byte	.LASF21
 942 0152 01       		.byte	0x1
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 38


 943 0153 1501     		.2byte	0x115
 944 0155 00000000 		.4byte	.LFB6
 945 0159 02000000 		.4byte	.LFE6-.LFB6
 946 015d 01       		.uleb128 0x1
 947 015e 9C       		.byte	0x9c
 948 015f 0A       		.uleb128 0xa
 949 0160 61010000 		.4byte	.LASF22
 950 0164 01       		.byte	0x1
 951 0165 2E01     		.2byte	0x12e
 952 0167 00000000 		.4byte	.LFB7
 953 016b 02000000 		.4byte	.LFE7-.LFB7
 954 016f 01       		.uleb128 0x1
 955 0170 9C       		.byte	0x9c
 956 0171 0B       		.uleb128 0xb
 957 0172 5D020000 		.4byte	.LASF23
 958 0176 01       		.byte	0x1
 959 0177 4801     		.2byte	0x148
 960 0179 00000000 		.4byte	.LFB8
 961 017d 0C000000 		.4byte	.LFE8-.LFB8
 962 0181 01       		.uleb128 0x1
 963 0182 9C       		.byte	0x9c
 964 0183 96010000 		.4byte	0x196
 965 0187 0C       		.uleb128 0xc
 966 0188 E1010000 		.4byte	.LASF25
 967 018c 01       		.byte	0x1
 968 018d 4801     		.2byte	0x148
 969 018f 6B000000 		.4byte	0x6b
 970 0193 01       		.uleb128 0x1
 971 0194 50       		.byte	0x50
 972 0195 00       		.byte	0
 973 0196 0B       		.uleb128 0xb
 974 0197 CA010000 		.4byte	.LASF24
 975 019b 01       		.byte	0x1
 976 019c 6001     		.2byte	0x160
 977 019e 00000000 		.4byte	.LFB9
 978 01a2 0C000000 		.4byte	.LFE9-.LFB9
 979 01a6 01       		.uleb128 0x1
 980 01a7 9C       		.byte	0x9c
 981 01a8 BB010000 		.4byte	0x1bb
 982 01ac 0C       		.uleb128 0xc
 983 01ad E1010000 		.4byte	.LASF25
 984 01b1 01       		.byte	0x1
 985 01b2 6001     		.2byte	0x160
 986 01b4 6B000000 		.4byte	0x6b
 987 01b8 01       		.uleb128 0x1
 988 01b9 50       		.byte	0x50
 989 01ba 00       		.byte	0
 990 01bb 0D       		.uleb128 0xd
 991 01bc 94010000 		.4byte	.LASF27
 992 01c0 01       		.byte	0x1
 993 01c1 8201     		.2byte	0x182
 994 01c3 6B000000 		.4byte	0x6b
 995 01c7 00000000 		.4byte	.LFB10
 996 01cb 0C000000 		.4byte	.LFE10-.LFB10
 997 01cf 01       		.uleb128 0x1
 998 01d0 9C       		.byte	0x9c
 999 01d1 E4010000 		.4byte	0x1e4
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 39


 1000 01d5 0E       		.uleb128 0xe
 1001 01d6 3B030000 		.4byte	.LASF26
 1002 01da 01       		.byte	0x1
 1003 01db 8401     		.2byte	0x184
 1004 01dd 6B000000 		.4byte	0x6b
 1005 01e1 01       		.uleb128 0x1
 1006 01e2 50       		.byte	0x50
 1007 01e3 00       		.byte	0
 1008 01e4 0D       		.uleb128 0xd
 1009 01e5 9B030000 		.4byte	.LASF28
 1010 01e9 01       		.byte	0x1
 1011 01ea B501     		.2byte	0x1b5
 1012 01ec 6B000000 		.4byte	0x6b
 1013 01f0 00000000 		.4byte	.LFB11
 1014 01f4 0C000000 		.4byte	.LFE11-.LFB11
 1015 01f8 01       		.uleb128 0x1
 1016 01f9 9C       		.byte	0x9c
 1017 01fa 0D020000 		.4byte	0x20d
 1018 01fe 0E       		.uleb128 0xe
 1019 01ff 3B030000 		.4byte	.LASF26
 1020 0203 01       		.byte	0x1
 1021 0204 B701     		.2byte	0x1b7
 1022 0206 6B000000 		.4byte	0x6b
 1023 020a 01       		.uleb128 0x1
 1024 020b 50       		.byte	0x50
 1025 020c 00       		.byte	0
 1026 020d 0B       		.uleb128 0xb
 1027 020e 0E000000 		.4byte	.LASF29
 1028 0212 01       		.byte	0x1
 1029 0213 EE01     		.2byte	0x1ee
 1030 0215 00000000 		.4byte	.LFB12
 1031 0219 18000000 		.4byte	.LFE12-.LFB12
 1032 021d 01       		.uleb128 0x1
 1033 021e 9C       		.byte	0x9c
 1034 021f 32020000 		.4byte	0x232
 1035 0223 0C       		.uleb128 0xc
 1036 0224 93020000 		.4byte	.LASF30
 1037 0228 01       		.byte	0x1
 1038 0229 EE01     		.2byte	0x1ee
 1039 022b 6B000000 		.4byte	0x6b
 1040 022f 01       		.uleb128 0x1
 1041 0230 50       		.byte	0x50
 1042 0231 00       		.byte	0
 1043 0232 0D       		.uleb128 0xd
 1044 0233 2A000000 		.4byte	.LASF31
 1045 0237 01       		.byte	0x1
 1046 0238 5A02     		.2byte	0x25a
 1047 023a 6B000000 		.4byte	0x6b
 1048 023e 00000000 		.4byte	.LFB13
 1049 0242 0C000000 		.4byte	.LFE13-.LFB13
 1050 0246 01       		.uleb128 0x1
 1051 0247 9C       		.byte	0x9c
 1052 0248 5B020000 		.4byte	0x25b
 1053 024c 0E       		.uleb128 0xe
 1054 024d 97000000 		.4byte	.LASF32
 1055 0251 01       		.byte	0x1
 1056 0252 5C02     		.2byte	0x25c
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 40


 1057 0254 6B000000 		.4byte	0x6b
 1058 0258 01       		.uleb128 0x1
 1059 0259 50       		.byte	0x50
 1060 025a 00       		.byte	0
 1061 025b 0D       		.uleb128 0xd
 1062 025c 12020000 		.4byte	.LASF33
 1063 0260 01       		.byte	0x1
 1064 0261 9A02     		.2byte	0x29a
 1065 0263 6B000000 		.4byte	0x6b
 1066 0267 00000000 		.4byte	.LFB14
 1067 026b 18000000 		.4byte	.LFE14-.LFB14
 1068 026f 01       		.uleb128 0x1
 1069 0270 9C       		.byte	0x9c
 1070 0271 84020000 		.4byte	0x284
 1071 0275 0E       		.uleb128 0xe
 1072 0276 C9000000 		.4byte	.LASF34
 1073 027a 01       		.byte	0x1
 1074 027b 9C02     		.2byte	0x29c
 1075 027d 6B000000 		.4byte	0x6b
 1076 0281 01       		.uleb128 0x1
 1077 0282 50       		.byte	0x50
 1078 0283 00       		.byte	0
 1079 0284 0D       		.uleb128 0xd
 1080 0285 F5010000 		.4byte	.LASF35
 1081 0289 01       		.byte	0x1
 1082 028a D702     		.2byte	0x2d7
 1083 028c 6B000000 		.4byte	0x6b
 1084 0290 00000000 		.4byte	.LFB15
 1085 0294 24000000 		.4byte	.LFE15-.LFB15
 1086 0298 01       		.uleb128 0x1
 1087 0299 9C       		.byte	0x9c
 1088 029a AF020000 		.4byte	0x2af
 1089 029e 0F       		.uleb128 0xf
 1090 029f C9000000 		.4byte	.LASF34
 1091 02a3 01       		.byte	0x1
 1092 02a4 D902     		.2byte	0x2d9
 1093 02a6 6B000000 		.4byte	0x6b
 1094 02aa 26000000 		.4byte	.LLST2
 1095 02ae 00       		.byte	0
 1096 02af 0A       		.uleb128 0xa
 1097 02b0 9A020000 		.4byte	.LASF36
 1098 02b4 01       		.byte	0x1
 1099 02b5 2603     		.2byte	0x326
 1100 02b7 00000000 		.4byte	.LFB16
 1101 02bb 1C000000 		.4byte	.LFE16-.LFB16
 1102 02bf 01       		.uleb128 0x1
 1103 02c0 9C       		.byte	0x9c
 1104 02c1 0B       		.uleb128 0xb
 1105 02c2 64000000 		.4byte	.LASF37
 1106 02c6 01       		.byte	0x1
 1107 02c7 5D03     		.2byte	0x35d
 1108 02c9 00000000 		.4byte	.LFB17
 1109 02cd 24000000 		.4byte	.LFE17-.LFB17
 1110 02d1 01       		.uleb128 0x1
 1111 02d2 9C       		.byte	0x9c
 1112 02d3 FA020000 		.4byte	0x2fa
 1113 02d7 0F       		.uleb128 0xf
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 41


 1114 02d8 B5020000 		.4byte	.LASF18
 1115 02dc 01       		.byte	0x1
 1116 02dd 5F03     		.2byte	0x35f
 1117 02df 6B000000 		.4byte	0x6b
 1118 02e3 44000000 		.4byte	.LLST3
 1119 02e7 08       		.uleb128 0x8
 1120 02e8 06000000 		.4byte	.LVL15
 1121 02ec 8E040000 		.4byte	0x48e
 1122 02f0 08       		.uleb128 0x8
 1123 02f1 1C000000 		.4byte	.LVL16
 1124 02f5 99040000 		.4byte	0x499
 1125 02f9 00       		.byte	0
 1126 02fa 0B       		.uleb128 0xb
 1127 02fb E8010000 		.4byte	.LASF38
 1128 02ff 01       		.byte	0x1
 1129 0300 C203     		.2byte	0x3c2
 1130 0302 00000000 		.4byte	.LFB18
 1131 0306 1E000000 		.4byte	.LFE18-.LFB18
 1132 030a 01       		.uleb128 0x1
 1133 030b 9C       		.byte	0x9c
 1134 030c 4A030000 		.4byte	0x34a
 1135 0310 10       		.uleb128 0x10
 1136 0311 FD020000 		.4byte	.LASF39
 1137 0315 01       		.byte	0x1
 1138 0316 C203     		.2byte	0x3c2
 1139 0318 4A030000 		.4byte	0x34a
 1140 031c 57000000 		.4byte	.LLST4
 1141 0320 10       		.uleb128 0x10
 1142 0321 8A010000 		.4byte	.LASF40
 1143 0325 01       		.byte	0x1
 1144 0326 C203     		.2byte	0x3c2
 1145 0328 6B000000 		.4byte	0x6b
 1146 032c 75000000 		.4byte	.LLST5
 1147 0330 0F       		.uleb128 0xf
 1148 0331 8A020000 		.4byte	.LASF41
 1149 0335 01       		.byte	0x1
 1150 0336 C503     		.2byte	0x3c5
 1151 0338 6B000000 		.4byte	0x6b
 1152 033c 9E000000 		.4byte	.LLST6
 1153 0340 08       		.uleb128 0x8
 1154 0341 10000000 		.4byte	.LVL20
 1155 0345 0D020000 		.4byte	0x20d
 1156 0349 00       		.byte	0
 1157 034a 11       		.uleb128 0x11
 1158 034b 04       		.byte	0x4
 1159 034c 50030000 		.4byte	0x350
 1160 0350 12       		.uleb128 0x12
 1161 0351 6B000000 		.4byte	0x6b
 1162 0355 0B       		.uleb128 0xb
 1163 0356 A4000000 		.4byte	.LASF42
 1164 035a 01       		.byte	0x1
 1165 035b E303     		.2byte	0x3e3
 1166 035d 00000000 		.4byte	.LFB19
 1167 0361 3C000000 		.4byte	.LFE19-.LFB19
 1168 0365 01       		.uleb128 0x1
 1169 0366 9C       		.byte	0x9c
 1170 0367 8E030000 		.4byte	0x38e
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 42


 1171 036b 0F       		.uleb128 0xf
 1172 036c B5020000 		.4byte	.LASF18
 1173 0370 01       		.byte	0x1
 1174 0371 E503     		.2byte	0x3e5
 1175 0373 6B000000 		.4byte	0x6b
 1176 0377 C8000000 		.4byte	.LLST7
 1177 037b 08       		.uleb128 0x8
 1178 037c 16000000 		.4byte	.LVL25
 1179 0380 8E040000 		.4byte	0x48e
 1180 0384 08       		.uleb128 0x8
 1181 0385 2C000000 		.4byte	.LVL26
 1182 0389 99040000 		.4byte	0x499
 1183 038d 00       		.byte	0
 1184 038e 06       		.uleb128 0x6
 1185 038f 4C000000 		.4byte	.LASF43
 1186 0393 01       		.byte	0x1
 1187 0394 3F       		.byte	0x3f
 1188 0395 00000000 		.4byte	.LFB0
 1189 0399 28000000 		.4byte	.LFE0-.LFB0
 1190 039d 01       		.uleb128 0x1
 1191 039e 9C       		.byte	0x9c
 1192 039f BF030000 		.4byte	0x3bf
 1193 03a3 08       		.uleb128 0x8
 1194 03a4 0C000000 		.4byte	.LVL27
 1195 03a8 55030000 		.4byte	0x355
 1196 03ac 08       		.uleb128 0x8
 1197 03ad 10000000 		.4byte	.LVL28
 1198 03b1 BB010000 		.4byte	0x1bb
 1199 03b5 08       		.uleb128 0x8
 1200 03b6 14000000 		.4byte	.LVL29
 1201 03ba E4010000 		.4byte	0x1e4
 1202 03be 00       		.byte	0
 1203 03bf 06       		.uleb128 0x6
 1204 03c0 91030000 		.4byte	.LASF44
 1205 03c4 01       		.byte	0x1
 1206 03c5 A3       		.byte	0xa3
 1207 03c6 00000000 		.4byte	.LFB2
 1208 03ca 1C000000 		.4byte	.LFE2-.LFB2
 1209 03ce 01       		.uleb128 0x1
 1210 03cf 9C       		.byte	0x9c
 1211 03d0 E7030000 		.4byte	0x3e7
 1212 03d4 08       		.uleb128 0x8
 1213 03d5 0C000000 		.4byte	.LVL30
 1214 03d9 8E030000 		.4byte	0x38e
 1215 03dd 08       		.uleb128 0x8
 1216 03de 16000000 		.4byte	.LVL31
 1217 03e2 AB000000 		.4byte	0xab
 1218 03e6 00       		.byte	0
 1219 03e7 0A       		.uleb128 0xa
 1220 03e8 00000000 		.4byte	.LASF45
 1221 03ec 01       		.byte	0x1
 1222 03ed 1104     		.2byte	0x411
 1223 03ef 00000000 		.4byte	.LFB20
 1224 03f3 02000000 		.4byte	.LFE20-.LFB20
 1225 03f7 01       		.uleb128 0x1
 1226 03f8 9C       		.byte	0x9c
 1227 03f9 0A       		.uleb128 0xa
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 43


 1228 03fa E4020000 		.4byte	.LASF46
 1229 03fe 01       		.byte	0x1
 1230 03ff 2904     		.2byte	0x429
 1231 0401 00000000 		.4byte	.LFB21
 1232 0405 02000000 		.4byte	.LFE21-.LFB21
 1233 0409 01       		.uleb128 0x1
 1234 040a 9C       		.byte	0x9c
 1235 040b 0B       		.uleb128 0xb
 1236 040c 45030000 		.4byte	.LASF47
 1237 0410 01       		.byte	0x1
 1238 0411 4204     		.2byte	0x442
 1239 0413 00000000 		.4byte	.LFB22
 1240 0417 14000000 		.4byte	.LFE22-.LFB22
 1241 041b 01       		.uleb128 0x1
 1242 041c 9C       		.byte	0x9c
 1243 041d 30040000 		.4byte	0x430
 1244 0421 0C       		.uleb128 0xc
 1245 0422 E1010000 		.4byte	.LASF25
 1246 0426 01       		.byte	0x1
 1247 0427 4204     		.2byte	0x442
 1248 0429 6B000000 		.4byte	0x6b
 1249 042d 01       		.uleb128 0x1
 1250 042e 50       		.byte	0x50
 1251 042f 00       		.byte	0
 1252 0430 0D       		.uleb128 0xd
 1253 0431 72030000 		.4byte	.LASF48
 1254 0435 01       		.byte	0x1
 1255 0436 6504     		.2byte	0x465
 1256 0438 6B000000 		.4byte	0x6b
 1257 043c 00000000 		.4byte	.LFB23
 1258 0440 18000000 		.4byte	.LFE23-.LFB23
 1259 0444 01       		.uleb128 0x1
 1260 0445 9C       		.byte	0x9c
 1261 0446 5B040000 		.4byte	0x45b
 1262 044a 0F       		.uleb128 0xf
 1263 044b 3B030000 		.4byte	.LASF26
 1264 044f 01       		.byte	0x1
 1265 0450 6704     		.2byte	0x467
 1266 0452 6B000000 		.4byte	0x6b
 1267 0456 DB000000 		.4byte	.LLST8
 1268 045a 00       		.byte	0
 1269 045b 13       		.uleb128 0x13
 1270 045c 1E000000 		.4byte	.LASF49
 1271 0460 01       		.byte	0x1
 1272 0461 22       		.byte	0x22
 1273 0462 6B000000 		.4byte	0x6b
 1274 0466 05       		.uleb128 0x5
 1275 0467 03       		.byte	0x3
 1276 0468 00000000 		.4byte	SPI_initVar
 1277 046c 13       		.uleb128 0x13
 1278 046d 88000000 		.4byte	.LASF50
 1279 0471 01       		.byte	0x1
 1280 0472 24       		.byte	0x24
 1281 0473 98000000 		.4byte	0x98
 1282 0477 05       		.uleb128 0x5
 1283 0478 03       		.byte	0x3
 1284 0479 00000000 		.4byte	SPI_swStatusTx
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 44


 1285 047d 13       		.uleb128 0x13
 1286 047e 55000000 		.4byte	.LASF51
 1287 0482 01       		.byte	0x1
 1288 0483 25       		.byte	0x25
 1289 0484 98000000 		.4byte	0x98
 1290 0488 05       		.uleb128 0x5
 1291 0489 03       		.byte	0x3
 1292 048a 00000000 		.4byte	SPI_swStatusRx
 1293 048e 14       		.uleb128 0x14
 1294 048f 26020000 		.4byte	.LASF52
 1295 0493 26020000 		.4byte	.LASF52
 1296 0497 03       		.byte	0x3
 1297 0498 7D       		.byte	0x7d
 1298 0499 14       		.uleb128 0x14
 1299 049a 74020000 		.4byte	.LASF53
 1300 049e 74020000 		.4byte	.LASF53
 1301 04a2 03       		.byte	0x3
 1302 04a3 7E       		.byte	0x7e
 1303 04a4 14       		.uleb128 0x14
 1304 04a5 4A020000 		.4byte	.LASF54
 1305 04a9 4A020000 		.4byte	.LASF54
 1306 04ad 04       		.byte	0x4
 1307 04ae 27       		.byte	0x27
 1308 04af 14       		.uleb128 0x14
 1309 04b0 76000000 		.4byte	.LASF55
 1310 04b4 76000000 		.4byte	.LASF55
 1311 04b8 04       		.byte	0x4
 1312 04b9 28       		.byte	0x28
 1313 04ba 00       		.byte	0
 1314              		.section	.debug_abbrev,"",%progbits
 1315              	.Ldebug_abbrev0:
 1316 0000 01       		.uleb128 0x1
 1317 0001 11       		.uleb128 0x11
 1318 0002 01       		.byte	0x1
 1319 0003 25       		.uleb128 0x25
 1320 0004 0E       		.uleb128 0xe
 1321 0005 13       		.uleb128 0x13
 1322 0006 0B       		.uleb128 0xb
 1323 0007 03       		.uleb128 0x3
 1324 0008 0E       		.uleb128 0xe
 1325 0009 1B       		.uleb128 0x1b
 1326 000a 0E       		.uleb128 0xe
 1327 000b 55       		.uleb128 0x55
 1328 000c 17       		.uleb128 0x17
 1329 000d 11       		.uleb128 0x11
 1330 000e 01       		.uleb128 0x1
 1331 000f 10       		.uleb128 0x10
 1332 0010 17       		.uleb128 0x17
 1333 0011 00       		.byte	0
 1334 0012 00       		.byte	0
 1335 0013 02       		.uleb128 0x2
 1336 0014 24       		.uleb128 0x24
 1337 0015 00       		.byte	0
 1338 0016 0B       		.uleb128 0xb
 1339 0017 0B       		.uleb128 0xb
 1340 0018 3E       		.uleb128 0x3e
 1341 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 45


 1342 001a 03       		.uleb128 0x3
 1343 001b 0E       		.uleb128 0xe
 1344 001c 00       		.byte	0
 1345 001d 00       		.byte	0
 1346 001e 03       		.uleb128 0x3
 1347 001f 24       		.uleb128 0x24
 1348 0020 00       		.byte	0
 1349 0021 0B       		.uleb128 0xb
 1350 0022 0B       		.uleb128 0xb
 1351 0023 3E       		.uleb128 0x3e
 1352 0024 0B       		.uleb128 0xb
 1353 0025 03       		.uleb128 0x3
 1354 0026 08       		.uleb128 0x8
 1355 0027 00       		.byte	0
 1356 0028 00       		.byte	0
 1357 0029 04       		.uleb128 0x4
 1358 002a 16       		.uleb128 0x16
 1359 002b 00       		.byte	0
 1360 002c 03       		.uleb128 0x3
 1361 002d 0E       		.uleb128 0xe
 1362 002e 3A       		.uleb128 0x3a
 1363 002f 0B       		.uleb128 0xb
 1364 0030 3B       		.uleb128 0x3b
 1365 0031 05       		.uleb128 0x5
 1366 0032 49       		.uleb128 0x49
 1367 0033 13       		.uleb128 0x13
 1368 0034 00       		.byte	0
 1369 0035 00       		.byte	0
 1370 0036 05       		.uleb128 0x5
 1371 0037 35       		.uleb128 0x35
 1372 0038 00       		.byte	0
 1373 0039 49       		.uleb128 0x49
 1374 003a 13       		.uleb128 0x13
 1375 003b 00       		.byte	0
 1376 003c 00       		.byte	0
 1377 003d 06       		.uleb128 0x6
 1378 003e 2E       		.uleb128 0x2e
 1379 003f 01       		.byte	0x1
 1380 0040 3F       		.uleb128 0x3f
 1381 0041 19       		.uleb128 0x19
 1382 0042 03       		.uleb128 0x3
 1383 0043 0E       		.uleb128 0xe
 1384 0044 3A       		.uleb128 0x3a
 1385 0045 0B       		.uleb128 0xb
 1386 0046 3B       		.uleb128 0x3b
 1387 0047 0B       		.uleb128 0xb
 1388 0048 27       		.uleb128 0x27
 1389 0049 19       		.uleb128 0x19
 1390 004a 11       		.uleb128 0x11
 1391 004b 01       		.uleb128 0x1
 1392 004c 12       		.uleb128 0x12
 1393 004d 06       		.uleb128 0x6
 1394 004e 40       		.uleb128 0x40
 1395 004f 18       		.uleb128 0x18
 1396 0050 9742     		.uleb128 0x2117
 1397 0052 19       		.uleb128 0x19
 1398 0053 01       		.uleb128 0x1
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 46


 1399 0054 13       		.uleb128 0x13
 1400 0055 00       		.byte	0
 1401 0056 00       		.byte	0
 1402 0057 07       		.uleb128 0x7
 1403 0058 34       		.uleb128 0x34
 1404 0059 00       		.byte	0
 1405 005a 03       		.uleb128 0x3
 1406 005b 0E       		.uleb128 0xe
 1407 005c 3A       		.uleb128 0x3a
 1408 005d 0B       		.uleb128 0xb
 1409 005e 3B       		.uleb128 0x3b
 1410 005f 0B       		.uleb128 0xb
 1411 0060 49       		.uleb128 0x49
 1412 0061 13       		.uleb128 0x13
 1413 0062 02       		.uleb128 0x2
 1414 0063 17       		.uleb128 0x17
 1415 0064 00       		.byte	0
 1416 0065 00       		.byte	0
 1417 0066 08       		.uleb128 0x8
 1418 0067 898201   		.uleb128 0x4109
 1419 006a 00       		.byte	0
 1420 006b 11       		.uleb128 0x11
 1421 006c 01       		.uleb128 0x1
 1422 006d 31       		.uleb128 0x31
 1423 006e 13       		.uleb128 0x13
 1424 006f 00       		.byte	0
 1425 0070 00       		.byte	0
 1426 0071 09       		.uleb128 0x9
 1427 0072 2E       		.uleb128 0x2e
 1428 0073 00       		.byte	0
 1429 0074 3F       		.uleb128 0x3f
 1430 0075 19       		.uleb128 0x19
 1431 0076 03       		.uleb128 0x3
 1432 0077 0E       		.uleb128 0xe
 1433 0078 3A       		.uleb128 0x3a
 1434 0079 0B       		.uleb128 0xb
 1435 007a 3B       		.uleb128 0x3b
 1436 007b 0B       		.uleb128 0xb
 1437 007c 27       		.uleb128 0x27
 1438 007d 19       		.uleb128 0x19
 1439 007e 11       		.uleb128 0x11
 1440 007f 01       		.uleb128 0x1
 1441 0080 12       		.uleb128 0x12
 1442 0081 06       		.uleb128 0x6
 1443 0082 40       		.uleb128 0x40
 1444 0083 18       		.uleb128 0x18
 1445 0084 9742     		.uleb128 0x2117
 1446 0086 19       		.uleb128 0x19
 1447 0087 00       		.byte	0
 1448 0088 00       		.byte	0
 1449 0089 0A       		.uleb128 0xa
 1450 008a 2E       		.uleb128 0x2e
 1451 008b 00       		.byte	0
 1452 008c 3F       		.uleb128 0x3f
 1453 008d 19       		.uleb128 0x19
 1454 008e 03       		.uleb128 0x3
 1455 008f 0E       		.uleb128 0xe
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 47


 1456 0090 3A       		.uleb128 0x3a
 1457 0091 0B       		.uleb128 0xb
 1458 0092 3B       		.uleb128 0x3b
 1459 0093 05       		.uleb128 0x5
 1460 0094 27       		.uleb128 0x27
 1461 0095 19       		.uleb128 0x19
 1462 0096 11       		.uleb128 0x11
 1463 0097 01       		.uleb128 0x1
 1464 0098 12       		.uleb128 0x12
 1465 0099 06       		.uleb128 0x6
 1466 009a 40       		.uleb128 0x40
 1467 009b 18       		.uleb128 0x18
 1468 009c 9742     		.uleb128 0x2117
 1469 009e 19       		.uleb128 0x19
 1470 009f 00       		.byte	0
 1471 00a0 00       		.byte	0
 1472 00a1 0B       		.uleb128 0xb
 1473 00a2 2E       		.uleb128 0x2e
 1474 00a3 01       		.byte	0x1
 1475 00a4 3F       		.uleb128 0x3f
 1476 00a5 19       		.uleb128 0x19
 1477 00a6 03       		.uleb128 0x3
 1478 00a7 0E       		.uleb128 0xe
 1479 00a8 3A       		.uleb128 0x3a
 1480 00a9 0B       		.uleb128 0xb
 1481 00aa 3B       		.uleb128 0x3b
 1482 00ab 05       		.uleb128 0x5
 1483 00ac 27       		.uleb128 0x27
 1484 00ad 19       		.uleb128 0x19
 1485 00ae 11       		.uleb128 0x11
 1486 00af 01       		.uleb128 0x1
 1487 00b0 12       		.uleb128 0x12
 1488 00b1 06       		.uleb128 0x6
 1489 00b2 40       		.uleb128 0x40
 1490 00b3 18       		.uleb128 0x18
 1491 00b4 9742     		.uleb128 0x2117
 1492 00b6 19       		.uleb128 0x19
 1493 00b7 01       		.uleb128 0x1
 1494 00b8 13       		.uleb128 0x13
 1495 00b9 00       		.byte	0
 1496 00ba 00       		.byte	0
 1497 00bb 0C       		.uleb128 0xc
 1498 00bc 05       		.uleb128 0x5
 1499 00bd 00       		.byte	0
 1500 00be 03       		.uleb128 0x3
 1501 00bf 0E       		.uleb128 0xe
 1502 00c0 3A       		.uleb128 0x3a
 1503 00c1 0B       		.uleb128 0xb
 1504 00c2 3B       		.uleb128 0x3b
 1505 00c3 05       		.uleb128 0x5
 1506 00c4 49       		.uleb128 0x49
 1507 00c5 13       		.uleb128 0x13
 1508 00c6 02       		.uleb128 0x2
 1509 00c7 18       		.uleb128 0x18
 1510 00c8 00       		.byte	0
 1511 00c9 00       		.byte	0
 1512 00ca 0D       		.uleb128 0xd
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 48


 1513 00cb 2E       		.uleb128 0x2e
 1514 00cc 01       		.byte	0x1
 1515 00cd 3F       		.uleb128 0x3f
 1516 00ce 19       		.uleb128 0x19
 1517 00cf 03       		.uleb128 0x3
 1518 00d0 0E       		.uleb128 0xe
 1519 00d1 3A       		.uleb128 0x3a
 1520 00d2 0B       		.uleb128 0xb
 1521 00d3 3B       		.uleb128 0x3b
 1522 00d4 05       		.uleb128 0x5
 1523 00d5 27       		.uleb128 0x27
 1524 00d6 19       		.uleb128 0x19
 1525 00d7 49       		.uleb128 0x49
 1526 00d8 13       		.uleb128 0x13
 1527 00d9 11       		.uleb128 0x11
 1528 00da 01       		.uleb128 0x1
 1529 00db 12       		.uleb128 0x12
 1530 00dc 06       		.uleb128 0x6
 1531 00dd 40       		.uleb128 0x40
 1532 00de 18       		.uleb128 0x18
 1533 00df 9742     		.uleb128 0x2117
 1534 00e1 19       		.uleb128 0x19
 1535 00e2 01       		.uleb128 0x1
 1536 00e3 13       		.uleb128 0x13
 1537 00e4 00       		.byte	0
 1538 00e5 00       		.byte	0
 1539 00e6 0E       		.uleb128 0xe
 1540 00e7 34       		.uleb128 0x34
 1541 00e8 00       		.byte	0
 1542 00e9 03       		.uleb128 0x3
 1543 00ea 0E       		.uleb128 0xe
 1544 00eb 3A       		.uleb128 0x3a
 1545 00ec 0B       		.uleb128 0xb
 1546 00ed 3B       		.uleb128 0x3b
 1547 00ee 05       		.uleb128 0x5
 1548 00ef 49       		.uleb128 0x49
 1549 00f0 13       		.uleb128 0x13
 1550 00f1 02       		.uleb128 0x2
 1551 00f2 18       		.uleb128 0x18
 1552 00f3 00       		.byte	0
 1553 00f4 00       		.byte	0
 1554 00f5 0F       		.uleb128 0xf
 1555 00f6 34       		.uleb128 0x34
 1556 00f7 00       		.byte	0
 1557 00f8 03       		.uleb128 0x3
 1558 00f9 0E       		.uleb128 0xe
 1559 00fa 3A       		.uleb128 0x3a
 1560 00fb 0B       		.uleb128 0xb
 1561 00fc 3B       		.uleb128 0x3b
 1562 00fd 05       		.uleb128 0x5
 1563 00fe 49       		.uleb128 0x49
 1564 00ff 13       		.uleb128 0x13
 1565 0100 02       		.uleb128 0x2
 1566 0101 17       		.uleb128 0x17
 1567 0102 00       		.byte	0
 1568 0103 00       		.byte	0
 1569 0104 10       		.uleb128 0x10
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 49


 1570 0105 05       		.uleb128 0x5
 1571 0106 00       		.byte	0
 1572 0107 03       		.uleb128 0x3
 1573 0108 0E       		.uleb128 0xe
 1574 0109 3A       		.uleb128 0x3a
 1575 010a 0B       		.uleb128 0xb
 1576 010b 3B       		.uleb128 0x3b
 1577 010c 05       		.uleb128 0x5
 1578 010d 49       		.uleb128 0x49
 1579 010e 13       		.uleb128 0x13
 1580 010f 02       		.uleb128 0x2
 1581 0110 17       		.uleb128 0x17
 1582 0111 00       		.byte	0
 1583 0112 00       		.byte	0
 1584 0113 11       		.uleb128 0x11
 1585 0114 0F       		.uleb128 0xf
 1586 0115 00       		.byte	0
 1587 0116 0B       		.uleb128 0xb
 1588 0117 0B       		.uleb128 0xb
 1589 0118 49       		.uleb128 0x49
 1590 0119 13       		.uleb128 0x13
 1591 011a 00       		.byte	0
 1592 011b 00       		.byte	0
 1593 011c 12       		.uleb128 0x12
 1594 011d 26       		.uleb128 0x26
 1595 011e 00       		.byte	0
 1596 011f 49       		.uleb128 0x49
 1597 0120 13       		.uleb128 0x13
 1598 0121 00       		.byte	0
 1599 0122 00       		.byte	0
 1600 0123 13       		.uleb128 0x13
 1601 0124 34       		.uleb128 0x34
 1602 0125 00       		.byte	0
 1603 0126 03       		.uleb128 0x3
 1604 0127 0E       		.uleb128 0xe
 1605 0128 3A       		.uleb128 0x3a
 1606 0129 0B       		.uleb128 0xb
 1607 012a 3B       		.uleb128 0x3b
 1608 012b 0B       		.uleb128 0xb
 1609 012c 49       		.uleb128 0x49
 1610 012d 13       		.uleb128 0x13
 1611 012e 3F       		.uleb128 0x3f
 1612 012f 19       		.uleb128 0x19
 1613 0130 02       		.uleb128 0x2
 1614 0131 18       		.uleb128 0x18
 1615 0132 00       		.byte	0
 1616 0133 00       		.byte	0
 1617 0134 14       		.uleb128 0x14
 1618 0135 2E       		.uleb128 0x2e
 1619 0136 00       		.byte	0
 1620 0137 3F       		.uleb128 0x3f
 1621 0138 19       		.uleb128 0x19
 1622 0139 3C       		.uleb128 0x3c
 1623 013a 19       		.uleb128 0x19
 1624 013b 6E       		.uleb128 0x6e
 1625 013c 0E       		.uleb128 0xe
 1626 013d 03       		.uleb128 0x3
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 50


 1627 013e 0E       		.uleb128 0xe
 1628 013f 3A       		.uleb128 0x3a
 1629 0140 0B       		.uleb128 0xb
 1630 0141 3B       		.uleb128 0x3b
 1631 0142 0B       		.uleb128 0xb
 1632 0143 00       		.byte	0
 1633 0144 00       		.byte	0
 1634 0145 00       		.byte	0
 1635              		.section	.debug_loc,"",%progbits
 1636              	.Ldebug_loc0:
 1637              	.LLST0:
 1638 0000 06000000 		.4byte	.LVL0
 1639 0004 27000000 		.4byte	.LVL1-1
 1640 0008 0100     		.2byte	0x1
 1641 000a 50       		.byte	0x50
 1642 000b 00000000 		.4byte	0
 1643 000f 00000000 		.4byte	0
 1644              	.LLST1:
 1645 0013 06000000 		.4byte	.LVL3
 1646 0017 1D000000 		.4byte	.LVL4-1
 1647 001b 0100     		.2byte	0x1
 1648 001d 50       		.byte	0x50
 1649 001e 00000000 		.4byte	0
 1650 0022 00000000 		.4byte	0
 1651              	.LLST2:
 1652 0026 06000000 		.4byte	.LVL13
 1653 002a 1C000000 		.4byte	.LVL14
 1654 002e 0100     		.2byte	0x1
 1655 0030 53       		.byte	0x53
 1656 0031 1C000000 		.4byte	.LVL14
 1657 0035 24000000 		.4byte	.LFE15
 1658 0039 0100     		.2byte	0x1
 1659 003b 50       		.byte	0x50
 1660 003c 00000000 		.4byte	0
 1661 0040 00000000 		.4byte	0
 1662              	.LLST3:
 1663 0044 06000000 		.4byte	.LVL15
 1664 0048 1B000000 		.4byte	.LVL16-1
 1665 004c 0100     		.2byte	0x1
 1666 004e 50       		.byte	0x50
 1667 004f 00000000 		.4byte	0
 1668 0053 00000000 		.4byte	0
 1669              	.LLST4:
 1670 0057 00000000 		.4byte	.LVL17
 1671 005b 0A000000 		.4byte	.LVL19
 1672 005f 0100     		.2byte	0x1
 1673 0061 50       		.byte	0x50
 1674 0062 0A000000 		.4byte	.LVL19
 1675 0066 1E000000 		.4byte	.LFE18
 1676 006a 0100     		.2byte	0x1
 1677 006c 56       		.byte	0x56
 1678 006d 00000000 		.4byte	0
 1679 0071 00000000 		.4byte	0
 1680              	.LLST5:
 1681 0075 00000000 		.4byte	.LVL17
 1682 0079 0A000000 		.4byte	.LVL19
 1683 007d 0100     		.2byte	0x1
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 51


 1684 007f 51       		.byte	0x51
 1685 0080 0A000000 		.4byte	.LVL19
 1686 0084 16000000 		.4byte	.LVL23
 1687 0088 0100     		.2byte	0x1
 1688 008a 54       		.byte	0x54
 1689 008b 18000000 		.4byte	.LVL24
 1690 008f 1E000000 		.4byte	.LFE18
 1691 0093 0100     		.2byte	0x1
 1692 0095 54       		.byte	0x54
 1693 0096 00000000 		.4byte	0
 1694 009a 00000000 		.4byte	0
 1695              	.LLST6:
 1696 009e 06000000 		.4byte	.LVL18
 1697 00a2 0A000000 		.4byte	.LVL19
 1698 00a6 0200     		.2byte	0x2
 1699 00a8 30       		.byte	0x30
 1700 00a9 9F       		.byte	0x9f
 1701 00aa 0A000000 		.4byte	.LVL19
 1702 00ae 12000000 		.4byte	.LVL21
 1703 00b2 0100     		.2byte	0x1
 1704 00b4 55       		.byte	0x55
 1705 00b5 14000000 		.4byte	.LVL22
 1706 00b9 1E000000 		.4byte	.LFE18
 1707 00bd 0100     		.2byte	0x1
 1708 00bf 55       		.byte	0x55
 1709 00c0 00000000 		.4byte	0
 1710 00c4 00000000 		.4byte	0
 1711              	.LLST7:
 1712 00c8 16000000 		.4byte	.LVL25
 1713 00cc 2B000000 		.4byte	.LVL26-1
 1714 00d0 0100     		.2byte	0x1
 1715 00d2 50       		.byte	0x50
 1716 00d3 00000000 		.4byte	0
 1717 00d7 00000000 		.4byte	0
 1718              	.LLST8:
 1719 00db 04000000 		.4byte	.LVL33
 1720 00df 0A000000 		.4byte	.LVL34
 1721 00e3 0100     		.2byte	0x1
 1722 00e5 53       		.byte	0x53
 1723 00e6 0A000000 		.4byte	.LVL34
 1724 00ea 0E000000 		.4byte	.LVL35
 1725 00ee 0600     		.2byte	0x6
 1726 00f0 70       		.byte	0x70
 1727 00f1 00       		.sleb128 0
 1728 00f2 08       		.byte	0x8
 1729 00f3 EF       		.byte	0xef
 1730 00f4 1A       		.byte	0x1a
 1731 00f5 9F       		.byte	0x9f
 1732 00f6 00000000 		.4byte	0
 1733 00fa 00000000 		.4byte	0
 1734              		.section	.debug_aranges,"",%progbits
 1735 0000 D4000000 		.4byte	0xd4
 1736 0004 0200     		.2byte	0x2
 1737 0006 00000000 		.4byte	.Ldebug_info0
 1738 000a 04       		.byte	0x4
 1739 000b 00       		.byte	0
 1740 000c 0000     		.2byte	0
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 52


 1741 000e 0000     		.2byte	0
 1742 0010 00000000 		.4byte	.LFB1
 1743 0014 34000000 		.4byte	.LFE1-.LFB1
 1744 0018 00000000 		.4byte	.LFB3
 1745 001c 28000000 		.4byte	.LFE3-.LFB3
 1746 0020 00000000 		.4byte	.LFB4
 1747 0024 02000000 		.4byte	.LFE4-.LFB4
 1748 0028 00000000 		.4byte	.LFB5
 1749 002c 02000000 		.4byte	.LFE5-.LFB5
 1750 0030 00000000 		.4byte	.LFB6
 1751 0034 02000000 		.4byte	.LFE6-.LFB6
 1752 0038 00000000 		.4byte	.LFB7
 1753 003c 02000000 		.4byte	.LFE7-.LFB7
 1754 0040 00000000 		.4byte	.LFB8
 1755 0044 0C000000 		.4byte	.LFE8-.LFB8
 1756 0048 00000000 		.4byte	.LFB9
 1757 004c 0C000000 		.4byte	.LFE9-.LFB9
 1758 0050 00000000 		.4byte	.LFB10
 1759 0054 0C000000 		.4byte	.LFE10-.LFB10
 1760 0058 00000000 		.4byte	.LFB11
 1761 005c 0C000000 		.4byte	.LFE11-.LFB11
 1762 0060 00000000 		.4byte	.LFB12
 1763 0064 18000000 		.4byte	.LFE12-.LFB12
 1764 0068 00000000 		.4byte	.LFB13
 1765 006c 0C000000 		.4byte	.LFE13-.LFB13
 1766 0070 00000000 		.4byte	.LFB14
 1767 0074 18000000 		.4byte	.LFE14-.LFB14
 1768 0078 00000000 		.4byte	.LFB15
 1769 007c 24000000 		.4byte	.LFE15-.LFB15
 1770 0080 00000000 		.4byte	.LFB16
 1771 0084 1C000000 		.4byte	.LFE16-.LFB16
 1772 0088 00000000 		.4byte	.LFB17
 1773 008c 24000000 		.4byte	.LFE17-.LFB17
 1774 0090 00000000 		.4byte	.LFB18
 1775 0094 1E000000 		.4byte	.LFE18-.LFB18
 1776 0098 00000000 		.4byte	.LFB19
 1777 009c 3C000000 		.4byte	.LFE19-.LFB19
 1778 00a0 00000000 		.4byte	.LFB0
 1779 00a4 28000000 		.4byte	.LFE0-.LFB0
 1780 00a8 00000000 		.4byte	.LFB2
 1781 00ac 1C000000 		.4byte	.LFE2-.LFB2
 1782 00b0 00000000 		.4byte	.LFB20
 1783 00b4 02000000 		.4byte	.LFE20-.LFB20
 1784 00b8 00000000 		.4byte	.LFB21
 1785 00bc 02000000 		.4byte	.LFE21-.LFB21
 1786 00c0 00000000 		.4byte	.LFB22
 1787 00c4 14000000 		.4byte	.LFE22-.LFB22
 1788 00c8 00000000 		.4byte	.LFB23
 1789 00cc 18000000 		.4byte	.LFE23-.LFB23
 1790 00d0 00000000 		.4byte	0
 1791 00d4 00000000 		.4byte	0
 1792              		.section	.debug_ranges,"",%progbits
 1793              	.Ldebug_ranges0:
 1794 0000 00000000 		.4byte	.LFB1
 1795 0004 34000000 		.4byte	.LFE1
 1796 0008 00000000 		.4byte	.LFB3
 1797 000c 28000000 		.4byte	.LFE3
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 53


 1798 0010 00000000 		.4byte	.LFB4
 1799 0014 02000000 		.4byte	.LFE4
 1800 0018 00000000 		.4byte	.LFB5
 1801 001c 02000000 		.4byte	.LFE5
 1802 0020 00000000 		.4byte	.LFB6
 1803 0024 02000000 		.4byte	.LFE6
 1804 0028 00000000 		.4byte	.LFB7
 1805 002c 02000000 		.4byte	.LFE7
 1806 0030 00000000 		.4byte	.LFB8
 1807 0034 0C000000 		.4byte	.LFE8
 1808 0038 00000000 		.4byte	.LFB9
 1809 003c 0C000000 		.4byte	.LFE9
 1810 0040 00000000 		.4byte	.LFB10
 1811 0044 0C000000 		.4byte	.LFE10
 1812 0048 00000000 		.4byte	.LFB11
 1813 004c 0C000000 		.4byte	.LFE11
 1814 0050 00000000 		.4byte	.LFB12
 1815 0054 18000000 		.4byte	.LFE12
 1816 0058 00000000 		.4byte	.LFB13
 1817 005c 0C000000 		.4byte	.LFE13
 1818 0060 00000000 		.4byte	.LFB14
 1819 0064 18000000 		.4byte	.LFE14
 1820 0068 00000000 		.4byte	.LFB15
 1821 006c 24000000 		.4byte	.LFE15
 1822 0070 00000000 		.4byte	.LFB16
 1823 0074 1C000000 		.4byte	.LFE16
 1824 0078 00000000 		.4byte	.LFB17
 1825 007c 24000000 		.4byte	.LFE17
 1826 0080 00000000 		.4byte	.LFB18
 1827 0084 1E000000 		.4byte	.LFE18
 1828 0088 00000000 		.4byte	.LFB19
 1829 008c 3C000000 		.4byte	.LFE19
 1830 0090 00000000 		.4byte	.LFB0
 1831 0094 28000000 		.4byte	.LFE0
 1832 0098 00000000 		.4byte	.LFB2
 1833 009c 1C000000 		.4byte	.LFE2
 1834 00a0 00000000 		.4byte	.LFB20
 1835 00a4 02000000 		.4byte	.LFE20
 1836 00a8 00000000 		.4byte	.LFB21
 1837 00ac 02000000 		.4byte	.LFE21
 1838 00b0 00000000 		.4byte	.LFB22
 1839 00b4 14000000 		.4byte	.LFE22
 1840 00b8 00000000 		.4byte	.LFB23
 1841 00bc 18000000 		.4byte	.LFE23
 1842 00c0 00000000 		.4byte	0
 1843 00c4 00000000 		.4byte	0
 1844              		.section	.debug_line,"",%progbits
 1845              	.Ldebug_line0:
 1846 0000 3D020000 		.section	.debug_str,"MS",%progbits,1
 1846      02005D00 
 1846      00000201 
 1846      FB0E0D00 
 1846      01010101 
 1847              	.LASF45:
 1848 0000 5350495F 		.ascii	"SPI_EnableInt\000"
 1848      456E6162 
 1848      6C65496E 
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 54


 1848      7400
 1849              	.LASF29:
 1850 000e 5350495F 		.ascii	"SPI_WriteTxData\000"
 1850      57726974 
 1850      65547844 
 1850      61746100 
 1851              	.LASF49:
 1852 001e 5350495F 		.ascii	"SPI_initVar\000"
 1852      696E6974 
 1852      56617200 
 1853              	.LASF31:
 1854 002a 5350495F 		.ascii	"SPI_ReadRxData\000"
 1854      52656164 
 1854      52784461 
 1854      746100
 1855              	.LASF3:
 1856 0039 73686F72 		.ascii	"short unsigned int\000"
 1856      7420756E 
 1856      7369676E 
 1856      65642069 
 1856      6E7400
 1857              	.LASF43:
 1858 004c 5350495F 		.ascii	"SPI_Init\000"
 1858      496E6974 
 1858      00
 1859              	.LASF51:
 1860 0055 5350495F 		.ascii	"SPI_swStatusRx\000"
 1860      73775374 
 1860      61747573 
 1860      527800
 1861              	.LASF37:
 1862 0064 5350495F 		.ascii	"SPI_ClearTxBuffer\000"
 1862      436C6561 
 1862      72547842 
 1862      75666665 
 1862      7200
 1863              	.LASF55:
 1864 0076 5350495F 		.ascii	"SPI_IntClock_Stop\000"
 1864      496E7443 
 1864      6C6F636B 
 1864      5F53746F 
 1864      7000
 1865              	.LASF50:
 1866 0088 5350495F 		.ascii	"SPI_swStatusTx\000"
 1866      73775374 
 1866      61747573 
 1866      547800
 1867              	.LASF32:
 1868 0097 72784461 		.ascii	"rxData\000"
 1868      746100
 1869              	.LASF9:
 1870 009e 666C6F61 		.ascii	"float\000"
 1870      7400
 1871              	.LASF42:
 1872 00a4 5350495F 		.ascii	"SPI_ClearFIFO\000"
 1872      436C6561 
 1872      72464946 
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 55


 1872      4F00
 1873              	.LASF7:
 1874 00b2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1874      206C6F6E 
 1874      6720756E 
 1874      7369676E 
 1874      65642069 
 1875              	.LASF34:
 1876 00c9 73697A65 		.ascii	"size\000"
 1876      00
 1877              	.LASF56:
 1878 00ce 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1878      43313120 
 1878      352E342E 
 1878      31203230 
 1878      31363036 
 1879 0101 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1879      20726576 
 1879      6973696F 
 1879      6E203233 
 1879      37373135 
 1880 0134 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1880      66756E63 
 1880      74696F6E 
 1880      2D736563 
 1880      74696F6E 
 1881              	.LASF13:
 1882 015c 72656738 		.ascii	"reg8\000"
 1882      00
 1883              	.LASF22:
 1884 0161 5350495F 		.ascii	"SPI_DisableRxInt\000"
 1884      44697361 
 1884      626C6552 
 1884      78496E74 
 1884      00
 1885              	.LASF5:
 1886 0172 6C6F6E67 		.ascii	"long unsigned int\000"
 1886      20756E73 
 1886      69676E65 
 1886      6420696E 
 1886      7400
 1887              	.LASF12:
 1888 0184 75696E74 		.ascii	"uint8\000"
 1888      3800
 1889              	.LASF40:
 1890 018a 62797465 		.ascii	"byteCount\000"
 1890      436F756E 
 1890      7400
 1891              	.LASF27:
 1892 0194 5350495F 		.ascii	"SPI_ReadTxStatus\000"
 1892      52656164 
 1892      54785374 
 1892      61747573 
 1892      00
 1893              	.LASF19:
 1894 01a5 5350495F 		.ascii	"SPI_EnableTxInt\000"
 1894      456E6162 
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 56


 1894      6C655478 
 1894      496E7400 
 1895              	.LASF1:
 1896 01b5 756E7369 		.ascii	"unsigned char\000"
 1896      676E6564 
 1896      20636861 
 1896      7200
 1897              	.LASF10:
 1898 01c3 646F7562 		.ascii	"double\000"
 1898      6C6500
 1899              	.LASF24:
 1900 01ca 5350495F 		.ascii	"SPI_SetRxInterruptMode\000"
 1900      53657452 
 1900      78496E74 
 1900      65727275 
 1900      70744D6F 
 1901              	.LASF25:
 1902 01e1 696E7453 		.ascii	"intSrc\000"
 1902      726300
 1903              	.LASF38:
 1904 01e8 5350495F 		.ascii	"SPI_PutArray\000"
 1904      50757441 
 1904      72726179 
 1904      00
 1905              	.LASF35:
 1906 01f5 5350495F 		.ascii	"SPI_GetTxBufferSize\000"
 1906      47657454 
 1906      78427566 
 1906      66657253 
 1906      697A6500 
 1907              	.LASF17:
 1908 0209 5350495F 		.ascii	"SPI_Stop\000"
 1908      53746F70 
 1908      00
 1909              	.LASF33:
 1910 0212 5350495F 		.ascii	"SPI_GetRxBufferSize\000"
 1910      47657452 
 1910      78427566 
 1910      66657253 
 1910      697A6500 
 1911              	.LASF52:
 1912 0226 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1912      74657243 
 1912      72697469 
 1912      63616C53 
 1912      65637469 
 1913              	.LASF8:
 1914 023d 756E7369 		.ascii	"unsigned int\000"
 1914      676E6564 
 1914      20696E74 
 1914      00
 1915              	.LASF54:
 1916 024a 5350495F 		.ascii	"SPI_IntClock_Start\000"
 1916      496E7443 
 1916      6C6F636B 
 1916      5F537461 
 1916      727400
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 57


 1917              	.LASF23:
 1918 025d 5350495F 		.ascii	"SPI_SetTxInterruptMode\000"
 1918      53657454 
 1918      78496E74 
 1918      65727275 
 1918      70744D6F 
 1919              	.LASF53:
 1920 0274 43794578 		.ascii	"CyExitCriticalSection\000"
 1920      69744372 
 1920      69746963 
 1920      616C5365 
 1920      6374696F 
 1921              	.LASF41:
 1922 028a 62756649 		.ascii	"bufIndex\000"
 1922      6E646578 
 1922      00
 1923              	.LASF30:
 1924 0293 74784461 		.ascii	"txData\000"
 1924      746100
 1925              	.LASF36:
 1926 029a 5350495F 		.ascii	"SPI_ClearRxBuffer\000"
 1926      436C6561 
 1926      72527842 
 1926      75666665 
 1926      7200
 1927              	.LASF15:
 1928 02ac 73697A65 		.ascii	"sizetype\000"
 1928      74797065 
 1928      00
 1929              	.LASF18:
 1930 02b5 656E6162 		.ascii	"enableInterrupts\000"
 1930      6C65496E 
 1930      74657272 
 1930      75707473 
 1930      00
 1931              	.LASF6:
 1932 02c6 6C6F6E67 		.ascii	"long long int\000"
 1932      206C6F6E 
 1932      6720696E 
 1932      7400
 1933              	.LASF11:
 1934 02d4 63686172 		.ascii	"char\000"
 1934      00
 1935              	.LASF16:
 1936 02d9 5350495F 		.ascii	"SPI_Enable\000"
 1936      456E6162 
 1936      6C6500
 1937              	.LASF46:
 1938 02e4 5350495F 		.ascii	"SPI_DisableInt\000"
 1938      44697361 
 1938      626C6549 
 1938      6E7400
 1939              	.LASF2:
 1940 02f3 73686F72 		.ascii	"short int\000"
 1940      7420696E 
 1940      7400
 1941              	.LASF39:
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 58


 1942 02fd 62756666 		.ascii	"buffer\000"
 1942      657200
 1943              	.LASF21:
 1944 0304 5350495F 		.ascii	"SPI_DisableTxInt\000"
 1944      44697361 
 1944      626C6554 
 1944      78496E74 
 1944      00
 1945              	.LASF57:
 1946 0315 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPI.c\000"
 1946      72617465 
 1946      645F536F 
 1946      75726365 
 1946      5C50536F 
 1947              	.LASF4:
 1948 0332 6C6F6E67 		.ascii	"long int\000"
 1948      20696E74 
 1948      00
 1949              	.LASF26:
 1950 033b 746D7053 		.ascii	"tmpStatus\000"
 1950      74617475 
 1950      7300
 1951              	.LASF47:
 1952 0345 5350495F 		.ascii	"SPI_SetInterruptMode\000"
 1952      53657449 
 1952      6E746572 
 1952      72757074 
 1952      4D6F6465 
 1953              	.LASF14:
 1954 035a 6C6F6E67 		.ascii	"long double\000"
 1954      20646F75 
 1954      626C6500 
 1955              	.LASF0:
 1956 0366 7369676E 		.ascii	"signed char\000"
 1956      65642063 
 1956      68617200 
 1957              	.LASF48:
 1958 0372 5350495F 		.ascii	"SPI_ReadStatus\000"
 1958      52656164 
 1958      53746174 
 1958      757300
 1959              	.LASF20:
 1960 0381 5350495F 		.ascii	"SPI_EnableRxInt\000"
 1960      456E6162 
 1960      6C655278 
 1960      496E7400 
 1961              	.LASF44:
 1962 0391 5350495F 		.ascii	"SPI_Start\000"
 1962      53746172 
 1962      7400
 1963              	.LASF28:
 1964 039b 5350495F 		.ascii	"SPI_ReadRxStatus\000"
 1964      52656164 
 1964      52785374 
 1964      61747573 
 1964      00
 1965              	.LASF58:
ARM GAS  C:\Users\afne7\AppData\Local\Temp\ccdJSwma.s 			page 59


 1966 03ac 433A5C55 		.ascii	"C:\\Users\\afne7\\Desktop\\SAFE\\Firmware\\LCD_test"
 1966      73657273 
 1966      5C61666E 
 1966      65375C44 
 1966      65736B74 
 1967 03d9 5C544654 		.ascii	"\\TFT_SSD1963\\TFT_test.cydsn\000"
 1967      5F535344 
 1967      31393633 
 1967      5C544654 
 1967      5F746573 
 1968              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

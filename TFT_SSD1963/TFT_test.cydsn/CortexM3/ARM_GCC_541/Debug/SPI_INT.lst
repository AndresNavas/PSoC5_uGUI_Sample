ARM GAS  C:\Users\afne7\AppData\Local\Temp\cc09YorC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPI_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPI_TX_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	SPI_TX_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	SPI_TX_ISR, %function
  25              	SPI_TX_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\SPI_INT.c"
   1:Generated_Source\PSoC5/SPI_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPI_INT.c **** * File Name: SPI_INT.c
   3:Generated_Source\PSoC5/SPI_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/SPI_INT.c **** *
   5:Generated_Source\PSoC5/SPI_INT.c **** * Description:
   6:Generated_Source\PSoC5/SPI_INT.c **** *  This file provides all Interrupt Service Routine (ISR) for the SPI Master
   7:Generated_Source\PSoC5/SPI_INT.c **** *  component.
   8:Generated_Source\PSoC5/SPI_INT.c **** *
   9:Generated_Source\PSoC5/SPI_INT.c **** * Note:
  10:Generated_Source\PSoC5/SPI_INT.c **** *  None.
  11:Generated_Source\PSoC5/SPI_INT.c **** *
  12:Generated_Source\PSoC5/SPI_INT.c **** ********************************************************************************
  13:Generated_Source\PSoC5/SPI_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC5/SPI_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC5/SPI_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC5/SPI_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC5/SPI_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC5/SPI_INT.c **** 
  19:Generated_Source\PSoC5/SPI_INT.c **** #include "SPI_PVT.h"
  20:Generated_Source\PSoC5/SPI_INT.c **** #include "cyapicallbacks.h"
  21:Generated_Source\PSoC5/SPI_INT.c **** 
  22:Generated_Source\PSoC5/SPI_INT.c **** /* User code required at start of ISR */
  23:Generated_Source\PSoC5/SPI_INT.c **** /* `#START SPI_ISR_START_DEF` */
  24:Generated_Source\PSoC5/SPI_INT.c **** 
  25:Generated_Source\PSoC5/SPI_INT.c **** /* `#END` */
  26:Generated_Source\PSoC5/SPI_INT.c **** 
  27:Generated_Source\PSoC5/SPI_INT.c **** 
  28:Generated_Source\PSoC5/SPI_INT.c **** /*******************************************************************************
  29:Generated_Source\PSoC5/SPI_INT.c **** * Function Name: SPI_TX_ISR
  30:Generated_Source\PSoC5/SPI_INT.c **** ********************************************************************************
ARM GAS  C:\Users\afne7\AppData\Local\Temp\cc09YorC.s 			page 2


  31:Generated_Source\PSoC5/SPI_INT.c **** *
  32:Generated_Source\PSoC5/SPI_INT.c **** * Summary:
  33:Generated_Source\PSoC5/SPI_INT.c **** *  Interrupt Service Routine for TX portion of the SPI Master.
  34:Generated_Source\PSoC5/SPI_INT.c **** *
  35:Generated_Source\PSoC5/SPI_INT.c **** * Parameters:
  36:Generated_Source\PSoC5/SPI_INT.c **** *  None.
  37:Generated_Source\PSoC5/SPI_INT.c **** *
  38:Generated_Source\PSoC5/SPI_INT.c **** * Return:
  39:Generated_Source\PSoC5/SPI_INT.c **** *  None.
  40:Generated_Source\PSoC5/SPI_INT.c **** *
  41:Generated_Source\PSoC5/SPI_INT.c **** * Global variables:
  42:Generated_Source\PSoC5/SPI_INT.c **** *  SPI_txBufferWrite - used for the account of the bytes which
  43:Generated_Source\PSoC5/SPI_INT.c **** *  have been written down in the TX software buffer.
  44:Generated_Source\PSoC5/SPI_INT.c **** *  SPI_txBufferRead - used for the account of the bytes which
  45:Generated_Source\PSoC5/SPI_INT.c **** *  have been read from the TX software buffer, modified when exist data to
  46:Generated_Source\PSoC5/SPI_INT.c **** *  sending and FIFO Not Full.
  47:Generated_Source\PSoC5/SPI_INT.c **** *  SPI_txBuffer[SPI_TX_BUFFER_SIZE] - used to store
  48:Generated_Source\PSoC5/SPI_INT.c **** *  data to sending.
  49:Generated_Source\PSoC5/SPI_INT.c **** *  All described above Global variables are used when Software Buffer is used.
  50:Generated_Source\PSoC5/SPI_INT.c **** *
  51:Generated_Source\PSoC5/SPI_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC5/SPI_INT.c **** CY_ISR(SPI_TX_ISR)
  53:Generated_Source\PSoC5/SPI_INT.c **** {
  28              		.loc 1 53 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE0:
  36              		.size	SPI_TX_ISR, .-SPI_TX_ISR
  37 0002 00BF     		.section	.text.SPI_RX_ISR,"ax",%progbits
  38              		.align	2
  39              		.global	SPI_RX_ISR
  40              		.thumb
  41              		.thumb_func
  42              		.type	SPI_RX_ISR, %function
  43              	SPI_RX_ISR:
  44              	.LFB1:
  54:Generated_Source\PSoC5/SPI_INT.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
  55:Generated_Source\PSoC5/SPI_INT.c ****         uint8 tmpStatus;
  56:Generated_Source\PSoC5/SPI_INT.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
  57:Generated_Source\PSoC5/SPI_INT.c **** 
  58:Generated_Source\PSoC5/SPI_INT.c ****     #ifdef SPI_TX_ISR_ENTRY_CALLBACK
  59:Generated_Source\PSoC5/SPI_INT.c ****         SPI_TX_ISR_EntryCallback();
  60:Generated_Source\PSoC5/SPI_INT.c ****     #endif /* SPI_TX_ISR_ENTRY_CALLBACK */
  61:Generated_Source\PSoC5/SPI_INT.c **** 
  62:Generated_Source\PSoC5/SPI_INT.c ****     /* User code required at start of ISR */
  63:Generated_Source\PSoC5/SPI_INT.c ****     /* `#START SPI_TX_ISR_START` */
  64:Generated_Source\PSoC5/SPI_INT.c **** 
  65:Generated_Source\PSoC5/SPI_INT.c ****     /* `#END` */
  66:Generated_Source\PSoC5/SPI_INT.c ****     
  67:Generated_Source\PSoC5/SPI_INT.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
  68:Generated_Source\PSoC5/SPI_INT.c ****         /* Check if TX data buffer is not empty and there is space in TX FIFO */
  69:Generated_Source\PSoC5/SPI_INT.c ****         while(SPI_txBufferRead != SPI_txBufferWrite)
  70:Generated_Source\PSoC5/SPI_INT.c ****         {
ARM GAS  C:\Users\afne7\AppData\Local\Temp\cc09YorC.s 			page 3


  71:Generated_Source\PSoC5/SPI_INT.c ****             tmpStatus = SPI_GET_STATUS_TX(SPI_swStatusTx);
  72:Generated_Source\PSoC5/SPI_INT.c ****             SPI_swStatusTx = tmpStatus;
  73:Generated_Source\PSoC5/SPI_INT.c **** 
  74:Generated_Source\PSoC5/SPI_INT.c ****             if(0u != (SPI_swStatusTx & SPI_STS_TX_FIFO_NOT_FULL))
  75:Generated_Source\PSoC5/SPI_INT.c ****             {
  76:Generated_Source\PSoC5/SPI_INT.c ****                 if(0u == SPI_txBufferFull)
  77:Generated_Source\PSoC5/SPI_INT.c ****                 {
  78:Generated_Source\PSoC5/SPI_INT.c ****                    SPI_txBufferRead++;
  79:Generated_Source\PSoC5/SPI_INT.c **** 
  80:Generated_Source\PSoC5/SPI_INT.c ****                     if(SPI_txBufferRead >= SPI_TX_BUFFER_SIZE)
  81:Generated_Source\PSoC5/SPI_INT.c ****                     {
  82:Generated_Source\PSoC5/SPI_INT.c ****                         SPI_txBufferRead = 0u;
  83:Generated_Source\PSoC5/SPI_INT.c ****                     }
  84:Generated_Source\PSoC5/SPI_INT.c ****                 }
  85:Generated_Source\PSoC5/SPI_INT.c ****                 else
  86:Generated_Source\PSoC5/SPI_INT.c ****                 {
  87:Generated_Source\PSoC5/SPI_INT.c ****                     SPI_txBufferFull = 0u;
  88:Generated_Source\PSoC5/SPI_INT.c ****                 }
  89:Generated_Source\PSoC5/SPI_INT.c **** 
  90:Generated_Source\PSoC5/SPI_INT.c ****                 /* Put data element into the TX FIFO */
  91:Generated_Source\PSoC5/SPI_INT.c ****                 CY_SET_REG8(SPI_TXDATA_PTR, 
  92:Generated_Source\PSoC5/SPI_INT.c ****                                              SPI_txBuffer[SPI_txBufferRead]);
  93:Generated_Source\PSoC5/SPI_INT.c ****             }
  94:Generated_Source\PSoC5/SPI_INT.c ****             else
  95:Generated_Source\PSoC5/SPI_INT.c ****             {
  96:Generated_Source\PSoC5/SPI_INT.c ****                 break;
  97:Generated_Source\PSoC5/SPI_INT.c ****             }
  98:Generated_Source\PSoC5/SPI_INT.c ****         }
  99:Generated_Source\PSoC5/SPI_INT.c **** 
 100:Generated_Source\PSoC5/SPI_INT.c ****         if(SPI_txBufferRead == SPI_txBufferWrite)
 101:Generated_Source\PSoC5/SPI_INT.c ****         {
 102:Generated_Source\PSoC5/SPI_INT.c ****             /* TX Buffer is EMPTY: disable interrupt on TX NOT FULL */
 103:Generated_Source\PSoC5/SPI_INT.c ****             SPI_TX_STATUS_MASK_REG &= ((uint8) ~SPI_STS_TX_FIFO_NOT_FULL);
 104:Generated_Source\PSoC5/SPI_INT.c ****         }
 105:Generated_Source\PSoC5/SPI_INT.c **** 
 106:Generated_Source\PSoC5/SPI_INT.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 107:Generated_Source\PSoC5/SPI_INT.c **** 
 108:Generated_Source\PSoC5/SPI_INT.c ****     /* User code required at end of ISR (Optional) */
 109:Generated_Source\PSoC5/SPI_INT.c ****     /* `#START SPI_TX_ISR_END` */
 110:Generated_Source\PSoC5/SPI_INT.c **** 
 111:Generated_Source\PSoC5/SPI_INT.c ****     /* `#END` */
 112:Generated_Source\PSoC5/SPI_INT.c ****     
 113:Generated_Source\PSoC5/SPI_INT.c ****     #ifdef SPI_TX_ISR_EXIT_CALLBACK
 114:Generated_Source\PSoC5/SPI_INT.c ****         SPI_TX_ISR_ExitCallback();
 115:Generated_Source\PSoC5/SPI_INT.c ****     #endif /* SPI_TX_ISR_EXIT_CALLBACK */
 116:Generated_Source\PSoC5/SPI_INT.c **** }
 117:Generated_Source\PSoC5/SPI_INT.c **** 
 118:Generated_Source\PSoC5/SPI_INT.c **** 
 119:Generated_Source\PSoC5/SPI_INT.c **** /*******************************************************************************
 120:Generated_Source\PSoC5/SPI_INT.c **** * Function Name: SPI_RX_ISR
 121:Generated_Source\PSoC5/SPI_INT.c **** ********************************************************************************
 122:Generated_Source\PSoC5/SPI_INT.c **** *
 123:Generated_Source\PSoC5/SPI_INT.c **** * Summary:
 124:Generated_Source\PSoC5/SPI_INT.c **** *  Interrupt Service Routine for RX portion of the SPI Master.
 125:Generated_Source\PSoC5/SPI_INT.c **** *
 126:Generated_Source\PSoC5/SPI_INT.c **** * Parameters:
 127:Generated_Source\PSoC5/SPI_INT.c **** *  None.
ARM GAS  C:\Users\afne7\AppData\Local\Temp\cc09YorC.s 			page 4


 128:Generated_Source\PSoC5/SPI_INT.c **** *
 129:Generated_Source\PSoC5/SPI_INT.c **** * Return:
 130:Generated_Source\PSoC5/SPI_INT.c **** *  None.
 131:Generated_Source\PSoC5/SPI_INT.c **** *
 132:Generated_Source\PSoC5/SPI_INT.c **** * Global variables:
 133:Generated_Source\PSoC5/SPI_INT.c **** *  SPI_rxBufferWrite - used for the account of the bytes which
 134:Generated_Source\PSoC5/SPI_INT.c **** *  have been written down in the RX software buffer modified when FIFO contains
 135:Generated_Source\PSoC5/SPI_INT.c **** *  new data.
 136:Generated_Source\PSoC5/SPI_INT.c **** *  SPI_rxBufferRead - used for the account of the bytes which
 137:Generated_Source\PSoC5/SPI_INT.c **** *  have been read from the RX software buffer, modified when overflow occurred.
 138:Generated_Source\PSoC5/SPI_INT.c **** *  SPI_rxBuffer[SPI_RX_BUFFER_SIZE] - used to store
 139:Generated_Source\PSoC5/SPI_INT.c **** *  received data, modified when FIFO contains new data.
 140:Generated_Source\PSoC5/SPI_INT.c **** *  All described above Global variables are used when Software Buffer is used.
 141:Generated_Source\PSoC5/SPI_INT.c **** *
 142:Generated_Source\PSoC5/SPI_INT.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/SPI_INT.c **** CY_ISR(SPI_RX_ISR)
 144:Generated_Source\PSoC5/SPI_INT.c **** {
  45              		.loc 1 144 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50 0000 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE1:
  53              		.size	SPI_RX_ISR, .-SPI_RX_ISR
  54 0002 00BF     		.text
  55              	.Letext0:
  56              		.section	.debug_info,"",%progbits
  57              	.Ldebug_info0:
  58 0000 AD000000 		.4byte	0xad
  59 0004 0400     		.2byte	0x4
  60 0006 00000000 		.4byte	.Ldebug_abbrev0
  61 000a 04       		.byte	0x4
  62 000b 01       		.uleb128 0x1
  63 000c 1B000000 		.4byte	.LASF16
  64 0010 0C       		.byte	0xc
  65 0011 3D010000 		.4byte	.LASF17
  66 0015 A9000000 		.4byte	.LASF18
  67 0019 00000000 		.4byte	.Ldebug_ranges0+0
  68 001d 00000000 		.4byte	0
  69 0021 00000000 		.4byte	.Ldebug_line0
  70 0025 02       		.uleb128 0x2
  71 0026 01       		.byte	0x1
  72 0027 06       		.byte	0x6
  73 0028 82010000 		.4byte	.LASF0
  74 002c 02       		.uleb128 0x2
  75 002d 01       		.byte	0x1
  76 002e 08       		.byte	0x8
  77 002f 21010000 		.4byte	.LASF1
  78 0033 02       		.uleb128 0x2
  79 0034 02       		.byte	0x2
  80 0035 05       		.byte	0x5
  81 0036 5E010000 		.4byte	.LASF2
  82 003a 02       		.uleb128 0x2
  83 003b 02       		.byte	0x2
  84 003c 07       		.byte	0x7
ARM GAS  C:\Users\afne7\AppData\Local\Temp\cc09YorC.s 			page 5


  85 003d 6F010000 		.4byte	.LASF3
  86 0041 02       		.uleb128 0x2
  87 0042 04       		.byte	0x4
  88 0043 05       		.byte	0x5
  89 0044 34010000 		.4byte	.LASF4
  90 0048 02       		.uleb128 0x2
  91 0049 04       		.byte	0x4
  92 004a 07       		.byte	0x7
  93 004b F2000000 		.4byte	.LASF5
  94 004f 02       		.uleb128 0x2
  95 0050 08       		.byte	0x8
  96 0051 05       		.byte	0x5
  97 0052 00000000 		.4byte	.LASF6
  98 0056 02       		.uleb128 0x2
  99 0057 08       		.byte	0x8
 100 0058 07       		.byte	0x7
 101 0059 04010000 		.4byte	.LASF7
 102 005d 03       		.uleb128 0x3
 103 005e 04       		.byte	0x4
 104 005f 05       		.byte	0x5
 105 0060 696E7400 		.ascii	"int\000"
 106 0064 02       		.uleb128 0x2
 107 0065 04       		.byte	0x4
 108 0066 07       		.byte	0x7
 109 0067 0E000000 		.4byte	.LASF8
 110 006b 02       		.uleb128 0x2
 111 006c 04       		.byte	0x4
 112 006d 04       		.byte	0x4
 113 006e 1B010000 		.4byte	.LASF9
 114 0072 02       		.uleb128 0x2
 115 0073 08       		.byte	0x8
 116 0074 04       		.byte	0x4
 117 0075 68010000 		.4byte	.LASF10
 118 0079 02       		.uleb128 0x2
 119 007a 01       		.byte	0x1
 120 007b 08       		.byte	0x8
 121 007c 2F010000 		.4byte	.LASF11
 122 0080 02       		.uleb128 0x2
 123 0081 08       		.byte	0x8
 124 0082 04       		.byte	0x4
 125 0083 8E010000 		.4byte	.LASF12
 126 0087 02       		.uleb128 0x2
 127 0088 04       		.byte	0x4
 128 0089 07       		.byte	0x7
 129 008a B0010000 		.4byte	.LASF13
 130 008e 04       		.uleb128 0x4
 131 008f A5010000 		.4byte	.LASF14
 132 0093 01       		.byte	0x1
 133 0094 34       		.byte	0x34
 134 0095 00000000 		.4byte	.LFB0
 135 0099 02000000 		.4byte	.LFE0-.LFB0
 136 009d 01       		.uleb128 0x1
 137 009e 9C       		.byte	0x9c
 138 009f 04       		.uleb128 0x4
 139 00a0 9A010000 		.4byte	.LASF15
 140 00a4 01       		.byte	0x1
 141 00a5 8F       		.byte	0x8f
ARM GAS  C:\Users\afne7\AppData\Local\Temp\cc09YorC.s 			page 6


 142 00a6 00000000 		.4byte	.LFB1
 143 00aa 02000000 		.4byte	.LFE1-.LFB1
 144 00ae 01       		.uleb128 0x1
 145 00af 9C       		.byte	0x9c
 146 00b0 00       		.byte	0
 147              		.section	.debug_abbrev,"",%progbits
 148              	.Ldebug_abbrev0:
 149 0000 01       		.uleb128 0x1
 150 0001 11       		.uleb128 0x11
 151 0002 01       		.byte	0x1
 152 0003 25       		.uleb128 0x25
 153 0004 0E       		.uleb128 0xe
 154 0005 13       		.uleb128 0x13
 155 0006 0B       		.uleb128 0xb
 156 0007 03       		.uleb128 0x3
 157 0008 0E       		.uleb128 0xe
 158 0009 1B       		.uleb128 0x1b
 159 000a 0E       		.uleb128 0xe
 160 000b 55       		.uleb128 0x55
 161 000c 17       		.uleb128 0x17
 162 000d 11       		.uleb128 0x11
 163 000e 01       		.uleb128 0x1
 164 000f 10       		.uleb128 0x10
 165 0010 17       		.uleb128 0x17
 166 0011 00       		.byte	0
 167 0012 00       		.byte	0
 168 0013 02       		.uleb128 0x2
 169 0014 24       		.uleb128 0x24
 170 0015 00       		.byte	0
 171 0016 0B       		.uleb128 0xb
 172 0017 0B       		.uleb128 0xb
 173 0018 3E       		.uleb128 0x3e
 174 0019 0B       		.uleb128 0xb
 175 001a 03       		.uleb128 0x3
 176 001b 0E       		.uleb128 0xe
 177 001c 00       		.byte	0
 178 001d 00       		.byte	0
 179 001e 03       		.uleb128 0x3
 180 001f 24       		.uleb128 0x24
 181 0020 00       		.byte	0
 182 0021 0B       		.uleb128 0xb
 183 0022 0B       		.uleb128 0xb
 184 0023 3E       		.uleb128 0x3e
 185 0024 0B       		.uleb128 0xb
 186 0025 03       		.uleb128 0x3
 187 0026 08       		.uleb128 0x8
 188 0027 00       		.byte	0
 189 0028 00       		.byte	0
 190 0029 04       		.uleb128 0x4
 191 002a 2E       		.uleb128 0x2e
 192 002b 00       		.byte	0
 193 002c 3F       		.uleb128 0x3f
 194 002d 19       		.uleb128 0x19
 195 002e 03       		.uleb128 0x3
 196 002f 0E       		.uleb128 0xe
 197 0030 3A       		.uleb128 0x3a
 198 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\afne7\AppData\Local\Temp\cc09YorC.s 			page 7


 199 0032 3B       		.uleb128 0x3b
 200 0033 0B       		.uleb128 0xb
 201 0034 27       		.uleb128 0x27
 202 0035 19       		.uleb128 0x19
 203 0036 11       		.uleb128 0x11
 204 0037 01       		.uleb128 0x1
 205 0038 12       		.uleb128 0x12
 206 0039 06       		.uleb128 0x6
 207 003a 40       		.uleb128 0x40
 208 003b 18       		.uleb128 0x18
 209 003c 9742     		.uleb128 0x2117
 210 003e 19       		.uleb128 0x19
 211 003f 00       		.byte	0
 212 0040 00       		.byte	0
 213 0041 00       		.byte	0
 214              		.section	.debug_aranges,"",%progbits
 215 0000 24000000 		.4byte	0x24
 216 0004 0200     		.2byte	0x2
 217 0006 00000000 		.4byte	.Ldebug_info0
 218 000a 04       		.byte	0x4
 219 000b 00       		.byte	0
 220 000c 0000     		.2byte	0
 221 000e 0000     		.2byte	0
 222 0010 00000000 		.4byte	.LFB0
 223 0014 02000000 		.4byte	.LFE0-.LFB0
 224 0018 00000000 		.4byte	.LFB1
 225 001c 02000000 		.4byte	.LFE1-.LFB1
 226 0020 00000000 		.4byte	0
 227 0024 00000000 		.4byte	0
 228              		.section	.debug_ranges,"",%progbits
 229              	.Ldebug_ranges0:
 230 0000 00000000 		.4byte	.LFB0
 231 0004 02000000 		.4byte	.LFE0
 232 0008 00000000 		.4byte	.LFB1
 233 000c 02000000 		.4byte	.LFE1
 234 0010 00000000 		.4byte	0
 235 0014 00000000 		.4byte	0
 236              		.section	.debug_line,"",%progbits
 237              	.Ldebug_line0:
 238 0000 5C000000 		.section	.debug_str,"MS",%progbits,1
 238      02003700 
 238      00000201 
 238      FB0E0D00 
 238      01010101 
 239              	.LASF6:
 240 0000 6C6F6E67 		.ascii	"long long int\000"
 240      206C6F6E 
 240      6720696E 
 240      7400
 241              	.LASF8:
 242 000e 756E7369 		.ascii	"unsigned int\000"
 242      676E6564 
 242      20696E74 
 242      00
 243              	.LASF16:
 244 001b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 244      43313120 
ARM GAS  C:\Users\afne7\AppData\Local\Temp\cc09YorC.s 			page 8


 244      352E342E 
 244      31203230 
 244      31363036 
 245 004e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 245      20726576 
 245      6973696F 
 245      6E203233 
 245      37373135 
 246 0081 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 246      66756E63 
 246      74696F6E 
 246      2D736563 
 246      74696F6E 
 247              	.LASF18:
 248 00a9 433A5C55 		.ascii	"C:\\Users\\afne7\\Desktop\\SAFE\\Firmware\\LCD_test"
 248      73657273 
 248      5C61666E 
 248      65375C44 
 248      65736B74 
 249 00d6 5C544654 		.ascii	"\\TFT_SSD1963\\TFT_test.cydsn\000"
 249      5F535344 
 249      31393633 
 249      5C544654 
 249      5F746573 
 250              	.LASF5:
 251 00f2 6C6F6E67 		.ascii	"long unsigned int\000"
 251      20756E73 
 251      69676E65 
 251      6420696E 
 251      7400
 252              	.LASF7:
 253 0104 6C6F6E67 		.ascii	"long long unsigned int\000"
 253      206C6F6E 
 253      6720756E 
 253      7369676E 
 253      65642069 
 254              	.LASF9:
 255 011b 666C6F61 		.ascii	"float\000"
 255      7400
 256              	.LASF1:
 257 0121 756E7369 		.ascii	"unsigned char\000"
 257      676E6564 
 257      20636861 
 257      7200
 258              	.LASF11:
 259 012f 63686172 		.ascii	"char\000"
 259      00
 260              	.LASF4:
 261 0134 6C6F6E67 		.ascii	"long int\000"
 261      20696E74 
 261      00
 262              	.LASF17:
 263 013d 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPI_INT.c\000"
 263      72617465 
 263      645F536F 
 263      75726365 
 263      5C50536F 
ARM GAS  C:\Users\afne7\AppData\Local\Temp\cc09YorC.s 			page 9


 264              	.LASF2:
 265 015e 73686F72 		.ascii	"short int\000"
 265      7420696E 
 265      7400
 266              	.LASF10:
 267 0168 646F7562 		.ascii	"double\000"
 267      6C6500
 268              	.LASF3:
 269 016f 73686F72 		.ascii	"short unsigned int\000"
 269      7420756E 
 269      7369676E 
 269      65642069 
 269      6E7400
 270              	.LASF0:
 271 0182 7369676E 		.ascii	"signed char\000"
 271      65642063 
 271      68617200 
 272              	.LASF12:
 273 018e 6C6F6E67 		.ascii	"long double\000"
 273      20646F75 
 273      626C6500 
 274              	.LASF15:
 275 019a 5350495F 		.ascii	"SPI_RX_ISR\000"
 275      52585F49 
 275      535200
 276              	.LASF14:
 277 01a5 5350495F 		.ascii	"SPI_TX_ISR\000"
 277      54585F49 
 277      535200
 278              	.LASF13:
 279 01b0 73697A65 		.ascii	"sizetype\000"
 279      74797065 
 279      00
 280              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
